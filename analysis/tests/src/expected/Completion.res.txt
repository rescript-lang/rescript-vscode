Complete src/Completion.res 1:11
posCursor:[1:11] posNoWhite:[1:10] Found expr:[1:3->1:11]
Pexp_ident MyList.m:[1:3->1:11]
Completable: Cpath Value[MyList, m]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "mapReverse",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\n  Equivalent to:\n\n  ```res\n  map(someList, f)->reverse\n  ```\n\n  ```res example\n  list{3, 4, 5}->Belt.List.mapReverse(x => x * x) /* list{25, 16, 9} */\n  ```\n"}
  }, {
    "label": "makeBy",
    "kind": 12,
    "tags": [],
    "detail": "(int, int => 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "\nReturn a list of length `numItems` with element `i` initialized with `f(i)`.\nReturns an empty list if `numItems` is negative.\n\n```res example\nBelt.List.makeBy(5, i => i) // list{0, 1, 2, 3, 4}\n\nBelt.List.makeBy(5, i => i * i) // list{0, 1, 4, 9, 16}\n```\n"}
  }, {
    "label": "make",
    "kind": 12,
    "tags": [],
    "detail": "(int, 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "\n  Returns a list of length `numItems` with each element filled with value `v`. Returns an empty list if `numItems` is negative.\n\n  ```res example\n  Belt.List.make(3, 1) // list{1, 1, 1}\n  ```\n"}
  }, {
    "label": "mapReverse2U",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'b>, (. 'a, 'b) => 'c) => t<'c>",
    "documentation": {"kind": "markdown", "value": " Uncurried version of [mapReverse2](#mapReverse2). "}
  }, {
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\n  Returns a new list with `f` applied to each element of `someList`.\n\n  ```res example\n  list{1, 2}->Belt.List.map(x => x + 1) // list{3, 4}\n  ```\n"}
  }, {
    "label": "mapWithIndexU",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (. int, 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": " Uncurried version of [mapWithIndex](#mapWithIndex). "}
  }, {
    "label": "mapU",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (. 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": " Uncurried version of [map](#map). "}
  }, {
    "label": "makeByU",
    "kind": 12,
    "tags": [],
    "detail": "(int, (. int) => 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": " Uncurried version of [makeBy](#makeBy) "}
  }, {
    "label": "mapReverse2",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'b>, ('a, 'b) => 'c) => t<'c>",
    "documentation": {"kind": "markdown", "value": "\n  Equivalent to: `zipBy(xs, ys, f)->reverse`\n\n  ```res example\n\n  Belt.List.mapReverse2(list{1, 2, 3}, list{1, 2}, (a, b) => a + b) // list{4, 2}\n  ```\n"}
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (int, 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\n  Applies `f` to each element of `someList`.\n  Function `f` takes two arguments: the index starting from 0 and the element from `someList`, in that order.\n\n  ```res example\n  list{1, 2, 3}->Belt.List.mapWithIndex((index, x) => index + x) // list{1, 3, 5}\n  ```\n"}
  }, {
    "label": "mapReverseU",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (. 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": " Uncurried version of [mapReverse](#mapReverse). "}
  }]

Complete src/Completion.res 3:9
posCursor:[3:9] posNoWhite:[3:8] Found expr:[3:3->3:9]
Pexp_ident Array.:[3:3->3:9]
Completable: Cpath Value[Array, ""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "concat",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>) => array<'a>",
    "documentation": null
  }, {
    "label": "filterMap",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => option<'b>) => array<'b>",
    "documentation": null
  }, {
    "label": "shift",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => option<'a>",
    "documentation": null
  }, {
    "label": "reduceReverse",
    "kind": 12,
    "tags": [],
    "detail": "(array<'b>, 'a, ('a, 'b) => 'a) => 'a",
    "documentation": {"kind": "markdown", "value": "\n  `reduceReverse(xs, init, f)`\n\n  Works like `Array.reduce`; except that function `f` is applied to each item of `xs` from the last back to the first.\n\n  ```res example\n  Array.reduceReverse([\"a\", \"b\", \"c\", \"d\"], \"\", (a, b) => a ++ b) == \"dcba\"\n  ```\n"}
  }, {
    "label": "fillInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, ~start: int, ~end: int) => unit",
    "documentation": null
  }, {
    "label": "concatMany",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<array<'a>>) => array<'a>",
    "documentation": null
  }, {
    "label": "joinWith",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, string) => string",
    "documentation": null
  }, {
    "label": "getSymbol",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, Core__Symbol.t) => option<'b>",
    "documentation": null
  }, {
    "label": "getSymbolUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, Core__Symbol.t) => 'b",
    "documentation": null
  }, {
    "label": "findIndexOpt",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => option<int>",
    "documentation": null
  }, {
    "label": "shuffle",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "copy",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "setUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => unit",
    "documentation": null
  }, {
    "label": "findIndexWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => int",
    "documentation": null
  }, {
    "label": "someWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => bool",
    "documentation": null
  }, {
    "label": "slice",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~start: int, ~end: int) => array<'a>",
    "documentation": null
  }, {
    "label": "includes",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => bool",
    "documentation": null
  }, {
    "label": "find",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => option<'a>",
    "documentation": null
  }, {
    "label": "lastIndexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, int) => int",
    "documentation": null
  }, {
    "label": "toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => string",
    "documentation": null
  }, {
    "label": "length",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => int",
    "documentation": null
  }, {
    "label": "every",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => bool",
    "documentation": null
  }, {
    "label": "sortInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, 'a) => int) => unit",
    "documentation": null
  }, {
    "label": "flat",
    "kind": 12,
    "tags": [],
    "detail": "array<array<'a>> => array<'a>",
    "documentation": null
  }, {
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "lastIndexOfOpt",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => option<int>",
    "documentation": null
  }, {
    "label": "copyWithin",
    "kind": 12,
    "tags": [],
    "detail": "(\n  array<'a>,\n  ~target: int,\n  ~start: int,\n  ~end: int,\n) => array<'a>",
    "documentation": null
  }, {
    "label": "fromWithMap",
    "kind": 12,
    "tags": [],
    "detail": "('a, 'b => 'c) => array<'c>",
    "documentation": null
  }, {
    "label": "toString",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => string",
    "documentation": null
  }, {
    "label": "everyWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => bool",
    "documentation": null
  }, {
    "label": "findWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => option<'a>",
    "documentation": null
  }, {
    "label": "reverse",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "getUnsafe",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => 'a",
    "documentation": null
  }, {
    "label": "unshiftMany",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>) => unit",
    "documentation": null
  }, {
    "label": "lastIndexOf",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "filter",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => array<'a>",
    "documentation": null
  }, {
    "label": "isArray",
    "kind": 12,
    "tags": [],
    "detail": "'a => bool",
    "documentation": null
  }, {
    "label": "shuffleInPlace",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => unit",
    "documentation": null
  }, {
    "label": "fromIteratorWithMap",
    "kind": 12,
    "tags": [],
    "detail": "(Core__Iterator.t<'a>, 'a => 'c) => array<'a>",
    "documentation": null
  }, {
    "label": "indexOfOpt",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => option<int>",
    "documentation": null
  }, {
    "label": "forEachWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => unit) => unit",
    "documentation": null
  }, {
    "label": "reduce",
    "kind": 12,
    "tags": [],
    "detail": "(array<'b>, 'a, ('a, 'b) => 'a) => 'a",
    "documentation": {"kind": "markdown", "value": "\n  `reduce(xs, init, f)`\n\n  Applies `f` to each element of `xs` from beginning to end. Function `f` has two parameters: the item from the list and an “accumulator”; which starts with a value of `init`. `reduce` returns the final value of the accumulator.\n\n  ```res example\n  Array.reduce([2, 3, 4], 1, (a, b) => a + b) == 10\n\n  Array.reduce([\"a\", \"b\", \"c\", \"d\"], \"\", (a, b) => a ++ b) == \"abcd\"\n  ```\n"}
  }, {
    "label": "sliceToEnd",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~start: int) => array<'a>",
    "documentation": null
  }, {
    "label": "from",
    "kind": 12,
    "tags": [],
    "detail": "'a => array<'b>",
    "documentation": null
  }, {
    "label": "fromArrayLikeWithMap",
    "kind": 12,
    "tags": [],
    "detail": "(Js.Array2.array_like<'a>, 'a => 'b) => array<'a>",
    "documentation": null
  }, {
    "label": "set",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => unit",
    "documentation": null
  }, {
    "label": "filterWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => bool) => array<'a>",
    "documentation": null
  }, {
    "label": "findIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => int",
    "documentation": null
  }, {
    "label": "setSymbol",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, Core__Symbol.t, 'b) => unit",
    "documentation": null
  }, {
    "label": "reverseInPlace",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => unit",
    "documentation": null
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "copyWithinToEnd",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~target: int, ~start: int) => array<'a>",
    "documentation": null
  }, {
    "label": "unshift",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => unit",
    "documentation": null
  }, {
    "label": "indexOf",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "fillInPlaceToEnd",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, ~start: int) => unit",
    "documentation": null
  }, {
    "label": "push",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => unit",
    "documentation": null
  }, {
    "label": "reduceWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'b, ('b, 'a, int) => 'b) => 'b",
    "documentation": {"kind": "markdown", "value": "\n  Applies `f` to each element of `xs` from beginning to end. Function `f` has three parameters: the item from the array and an “accumulator”, which starts with a value of `init` and the index of each element. `reduceWithIndex` returns the final value of the accumulator.\n\n  ```res example\n  Array.reduceWithIndex([1, 2, 3, 4], 0, (acc, x, i) => acc + x + i) == 16\n  ```\n"}
  }, {
    "label": "some",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => bool) => bool",
    "documentation": null
  }, {
    "label": "copyAllWithin",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ~target: int) => array<'a>",
    "documentation": null
  }, {
    "label": "pop",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => option<'a>",
    "documentation": null
  }, {
    "label": "get",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => option<'a>",
    "documentation": null
  }, {
    "label": "fillAllInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a) => unit",
    "documentation": null
  }, {
    "label": "pushMany",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, array<'a>) => unit",
    "documentation": null
  }, {
    "label": "spliceInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(\n  array<'a>,\n  ~start: int,\n  ~remove: int,\n  ~insert: array<'a>,\n) => unit",
    "documentation": null
  }, {
    "label": "fromIterator",
    "kind": 12,
    "tags": [],
    "detail": "Core__Iterator.t<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "forEach",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => unit) => unit",
    "documentation": null
  }, {
    "label": "flatMap",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => array<'b>) => array<'b>",
    "documentation": null
  }, {
    "label": "fromArrayLike",
    "kind": 12,
    "tags": [],
    "detail": "Js.Array2.array_like<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "indexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a, int) => int",
    "documentation": null
  }]

Complete src/Completion.res 5:10
posCursor:[5:10] posNoWhite:[5:9] Found expr:[5:3->5:10]
Pexp_ident Array.m:[5:3->5:10]
Completable: Cpath Value[Array, m]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => 'b) => array<'b>",
    "documentation": null
  }]

Complete src/Completion.res 15:17
posCursor:[15:17] posNoWhite:[15:16] Found expr:[15:12->15:17]
Pexp_ident Dep.c:[15:12->15:17]
Completable: Cpath Value[Dep, c]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "customDouble",
    "kind": 12,
    "tags": [1],
    "detail": "int => int",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use customDouble instead\n\nSome doc comment"}
  }]

Complete src/Completion.res 23:20
posCursor:[23:20] posNoWhite:[23:19] Found expr:[23:11->23:20]
Pexp_apply ...[23:11->23:18] ()
Completable: CnamedArg(Value[Lib, foo], "", [])
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
Found type for function (~age: int, ~name: string) => string
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 26:13
posCursor:[26:13] posNoWhite:[26:12] Found expr:[26:3->26:13]
Completable: Cpath array<int>->m
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "Array.map",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "Array.mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => 'b) => array<'b>",
    "documentation": null
  }]

Complete src/Completion.res 29:13
posCursor:[29:13] posNoWhite:[29:12] Found expr:[29:3->29:13]
Completable: Cpath string->toU
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "String.toUpperCase",
    "kind": 12,
    "tags": [],
    "detail": "string => string",
    "documentation": null
  }]

Complete src/Completion.res 34:8
posCursor:[34:8] posNoWhite:[34:7] Found expr:[34:3->34:8]
Completable: Cpath Value[op]->e
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "Option.eq",
    "kind": 12,
    "tags": [],
    "detail": "(option<'a>, option<'b>, ('a, 'b) => bool) => bool",
    "documentation": {"kind": "markdown", "value": "\n   Evaluates two optional values for equality with respect to a predicate\n   function. If both `optValue1` and `optValue2` are `None`, returns `true`.\n   If one of the arguments is `Some(value)` and the other is `None`, returns\n   `false`.\n\n   If arguments are `Some(value1)` and `Some(value2)`, returns the result of\n   `predicate(value1, value2)`; the predicate function must return a bool.\n\n   ```res example\n   let clockEqual = (a, b) => mod(a, 12) == mod(b, 12)\n\n   open Option\n\n   eq(Some(3), Some(15), clockEqual) /* true */\n\n   eq(Some(3), None, clockEqual) /* false */\n\n   eq(None, Some(3), clockEqual) /* false */\n\n   eq(None, None, clockEqual) /* true */\n   ```\n"}
  }]

Complete src/Completion.res 44:7
posCursor:[44:7] posNoWhite:[44:6] Found expr:[44:3->54:3]
Pexp_apply ...[50:9->50:10] (...[44:3->50:8], ...[51:2->54:3])
posCursor:[44:7] posNoWhite:[44:6] Found expr:[44:3->50:8]
Completable: Cpath Value[fa]->
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "ForAuto.abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "ForAuto.abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 47:21
posCursor:[47:21] posNoWhite:[47:20] Found expr:[47:3->47:21]
posCursor:[47:21] posNoWhite:[47:20] Found expr:[47:12->47:21]
Pexp_ident Js.Dict.u:[47:12->47:21]
Completable: Cpath Value[Js, Dict, u]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "unsafeGet",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, key) => 'a",
    "documentation": {"kind": "markdown", "value": "\n`Js.Dict.unsafeGet(key)` returns the value if the key exists, otherwise an `undefined` value is returned. Use this only when you are sure the key exists (i.e. when having used the `keys()` function to check that the key is valid).\n\n```res example\nJs.Dict.unsafeGet(ages, \"Fred\") == 49\nJs.Dict.unsafeGet(ages, \"Paul\") // returns undefined\n```\n"}
  }, {
    "label": "unsafeDeleteKey",
    "kind": 12,
    "tags": [],
    "detail": "(. t<string>, string) => unit",
    "documentation": {"kind": "markdown", "value": " Experimental internal function "}
  }]

Complete src/Completion.res 59:30
posCursor:[59:30] posNoWhite:[59:29] Found expr:[59:15->59:30]
JSX <O.Comp:[59:15->59:21] second[59:22->59:28]=...[59:29->59:30]> _children:None
Completable: Cexpression CJsxPropValue [O, Comp] second=z
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "zzz",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 62:23
posCursor:[62:23] posNoWhite:[62:22] Found expr:[62:15->62:23]
JSX <O.Comp:[62:15->62:21] z[62:22->62:23]=...[62:22->62:23]> _children:None
Completable: Cjsx([O, Comp], z, [z])
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "zoo",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 65:8
Attribute id:reac:[65:3->65:8] label:reac
Completable: Cdecorator(reac)
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "react.component",
    "kind": 4,
    "tags": [],
    "detail": "",
    "documentation": {"kind": "markdown", "value": "The `@react.component` decorator is used to annotate functions that are RescriptReact components.\n\nYou will need this decorator whenever you want to use a ReScript / React component in ReScript JSX expressions.\n\nNote: The `@react.component` decorator requires the react-jsx config to be set in your `bsconfig.json` to enable the required React transformations.\n\n[Read more and see examples in the documentation](https://rescript-lang.org/syntax-lookup#react-component-decorator)."}
  }]

Complete src/Completion.res 68:10
posCursor:[68:10] posNoWhite:[68:9] Found expr:[0:-1->86:1]
Pexp_apply ...[80:6->80:7] (...[80:8->86:1])
Attribute id:react.let:[68:3->80:3] label:react.
Completable: Cdecorator(react.)
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "component",
    "kind": 4,
    "tags": [],
    "detail": "",
    "documentation": {"kind": "markdown", "value": "The `@react.component` decorator is used to annotate functions that are RescriptReact components.\n\nYou will need this decorator whenever you want to use a ReScript / React component in ReScript JSX expressions.\n\nNote: The `@react.component` decorator requires the react-jsx config to be set in your `bsconfig.json` to enable the required React transformations.\n\n[Read more and see examples in the documentation](https://rescript-lang.org/syntax-lookup#react-component-decorator)."}
  }]

Complete src/Completion.res 71:27
posCursor:[71:27] posNoWhite:[71:26] Found expr:[71:11->71:27]
Pexp_apply ...[71:11->71:18] (~name71:20->71:24=...[71:20->71:24])
Completable: CnamedArg(Value[Lib, foo], "", [name])
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
Found type for function (~age: int, ~name: string) => string
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 74:26
posCursor:[74:26] posNoWhite:[74:25] Found expr:[74:11->74:26]
Pexp_apply ...[74:11->74:18] (~age74:20->74:23=...[74:20->74:23])
Completable: CnamedArg(Value[Lib, foo], "", [age])
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
Found type for function (~age: int, ~name: string) => string
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 77:32
posCursor:[77:32] posNoWhite:[77:31] Found expr:[77:11->77:32]
Pexp_apply ...[77:11->77:18] (~age77:20->77:23=...[77:25->77:28])
Completable: CnamedArg(Value[Lib, foo], "", [age])
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
Found type for function (~age: int, ~name: string) => string
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 82:5
posCursor:[82:5] posNoWhite:[82:4] Found expr:[80:8->86:1]
Pexp_apply ...[80:8->80:15] (~age84:3->84:6=...[84:7->84:8], ~name85:3->85:7=...[85:8->85:10])
Completable: CnamedArg(Value[Lib, foo], "", [age, name])
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
Found type for function (~age: int, ~name: string) => string
[]

Complete src/Completion.res 90:13
posCursor:[90:13] posNoWhite:[90:12] Found expr:[90:3->93:18]
Pexp_send a[90:12->90:13] e:[90:3->90:10]
Completable: Cpath Value[someObj]["a"]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 95:24
posCursor:[95:24] posNoWhite:[95:23] Found expr:[95:3->99:6]
Pexp_send [95:24->95:24] e:[95:3->95:22]
Completable: Cpath Value[nestedObj]["x"]["y"][""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 99:7
posCursor:[99:7] posNoWhite:[99:6] Found expr:[99:3->102:20]
Pexp_send a[99:6->99:7] e:[99:3->99:4]
Completable: Cpath Value[o]["a"]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 104:17
posCursor:[104:17] posNoWhite:[104:16] Found expr:[104:3->125:18]
Pexp_send [104:17->104:17] e:[104:3->104:15]
Completable: Cpath Value[no]["x"]["y"][""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }, {
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 110:5
posCursor:[110:5] posNoWhite:[110:4] Found expr:[110:3->110:5]
Pexp_field [110:3->110:4] _:[116:0->110:5]
Completable: Cpath Value[r].""
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "x: int\n\ntype r = {x: int, y: string}",
    "documentation": null
  }, {
    "label": "y",
    "kind": 5,
    "tags": [],
    "detail": "y: string\n\ntype r = {x: int, y: string}",
    "documentation": null
  }]

Complete src/Completion.res 113:24
posCursor:[113:24] posNoWhite:[113:23] Found expr:[113:3->113:24]
Pexp_field [113:3->113:23] _:[116:0->113:24]
Completable: Cpath Value[Object, Rec, recordVal].""
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[]

Complete src/Completion.res 120:7
posCursor:[120:7] posNoWhite:[120:6] Found expr:[119:11->123:1]
posCursor:[120:7] posNoWhite:[120:6] Found expr:[120:5->122:5]
posCursor:[120:7] posNoWhite:[120:6] Found expr:[120:5->120:7]
Pexp_ident my:[120:5->120:7]
Completable: Cpath Value[my]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "myAmazingFunction",
    "kind": 12,
    "tags": [],
    "detail": "(int, int) => int",
    "documentation": null
  }]

Complete src/Completion.res 125:18
posCursor:[125:18] posNoWhite:[125:17] Found expr:[125:3->145:32]
Pexp_send [125:18->125:18] e:[125:3->125:16]
Completable: Cpath Value[Object, object][""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[]

Complete src/Completion.res 151:6
posCursor:[151:6] posNoWhite:[151:5] Found expr:[151:4->151:6]
JSX <O.:[151:4->151:6] > _children:None
Completable: Cpath Module[O, ""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "Comp",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 157:8
posCursor:[157:8] posNoWhite:[157:7] Found expr:[157:3->157:8]
Pexp_field [157:3->157:7] _:[165:0->157:8]
Completable: Cpath Value[q].aa.""
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "x: int\n\ntype aa = {x: int, name: string}",
    "documentation": null
  }, {
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "name: string\n\ntype aa = {x: int, name: string}",
    "documentation": null
  }]

Complete src/Completion.res 159:9
posCursor:[159:9] posNoWhite:[159:8] Found expr:[159:3->159:9]
Pexp_field [159:3->159:7] n:[159:8->159:9]
Completable: Cpath Value[q].aa.n
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "name: string\n\ntype aa = {x: int, name: string}",
    "documentation": null
  }]

Complete src/Completion.res 162:6
posCursor:[162:6] posNoWhite:[162:5] Found expr:[162:3->162:6]
Pexp_construct Lis:[162:3->162:6] None
Completable: Cpath Value[Lis]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "List",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }, {
    "label": "List",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ListLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }]

Complete src/Completion.res 169:16
posCursor:[169:16] posNoWhite:[169:15] Found expr:[169:4->169:16]
JSX <WithChildren:[169:4->169:16] > _children:None
Completable: Cpath Module[WithChildren]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "WithChildren",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 172:16
posCursor:[172:16] posNoWhite:[172:15] Found type:[172:12->172:16]
Ptyp_constr Js.n:[172:12->172:16]
Completable: Cpath Type[Js, n]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "null_undefined",
    "kind": 22,
    "tags": [],
    "detail": "type null_undefined<'a> = nullable<'a>",
    "documentation": null
  }, {
    "label": "nullable",
    "kind": 22,
    "tags": [],
    "detail": "type nullable<+'a>",
    "documentation": {"kind": "markdown", "value": "\n  A value of this type can be undefined, null or 'a. This type is equivalent to Js.Null_undefined.t.\n"}
  }, {
    "label": "null",
    "kind": 22,
    "tags": [],
    "detail": "type null<+'a>",
    "documentation": {"kind": "markdown", "value": "\n  Nullable value of this type can be either null or 'a. This type is equivalent to Js.Null.t.\n"}
  }]

Complete src/Completion.res 174:20
posCursor:[174:20] posNoWhite:[174:19] Found type:[174:12->174:20]
Ptyp_constr ForAuto.:[174:12->174:20]
Completable: Cpath Type[ForAuto, ""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "t",
    "kind": 22,
    "tags": [],
    "detail": "type t = int",
    "documentation": null
  }]

Complete src/Completion.res 179:13
posCursor:[179:13] posNoWhite:[179:12] Found expr:[179:11->179:13]
Pexp_construct As:[179:11->179:13] None
Completable: Cpath Value[As]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "Asterix",
    "kind": 4,
    "tags": [],
    "detail": "Asterix\n\ntype z = Allo | Asterix | Baba",
    "documentation": null
  }, {
    "label": "AsyncIterator",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 182:17
Pmod_ident For:[182:14->182:17]
Completable: Cpath Module[For]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "ForAuto",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 190:11
posCursor:[190:11] posNoWhite:[190:10] Found expr:[190:3->190:11]
Pexp_ident Private.:[190:3->190:11]
Completable: Cpath Value[Private, ""]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[{
    "label": "b",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 202:6
posCursor:[202:6] posNoWhite:[202:5] Found expr:[202:3->202:6]
Pexp_ident sha:[202:3->202:6]
Completable: Cpath Value[sha]
Package opens RescriptCore.place holder
Resolved opens 1 RescriptCore.res
[]

Complete src/Completion.res 205:6
posCursor:[205:6] posNoWhite:[205:5] Found expr:[205:3->205:6]
Pexp_ident sha:[205:3->205:6]
Completable: Cpath Value[sha]
Raw opens: 1 Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 2 Completion.res RescriptCore.res
[{
    "label": "shadowed",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 208:6
posCursor:[208:6] posNoWhite:[208:5] Found expr:[208:3->208:6]
Pexp_ident sha:[208:3->208:6]
Completable: Cpath Value[sha]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "shadowed",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 221:22
posCursor:[221:22] posNoWhite:[221:21] Found expr:[221:3->224:22]
Pexp_send [221:22->221:22] e:[221:3->221:20]
Completable: Cpath Value[FAO, forAutoObject][""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "forAutoLabel",
    "kind": 4,
    "tags": [],
    "detail": "FAR.forAutoRecord",
    "documentation": null
  }]

Complete src/Completion.res 224:37
posCursor:[224:37] posNoWhite:[224:36] Found expr:[224:3->224:37]
Pexp_field [224:3->224:36] _:[233:0->224:37]
Completable: Cpath Value[FAO, forAutoObject]["forAutoLabel"].""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "forAuto",
    "kind": 5,
    "tags": [],
    "detail": "forAuto: ForAuto.t\n\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}",
    "documentation": null
  }, {
    "label": "something",
    "kind": 5,
    "tags": [],
    "detail": "something: option<int>\n\ntype forAutoRecord = {\n  forAuto: ForAuto.t,\n  something: option<int>,\n}",
    "documentation": null
  }]

Complete src/Completion.res 227:46
posCursor:[227:46] posNoWhite:[227:45] Found expr:[227:3->0:-1]
Completable: Cpath Value[FAO, forAutoObject]["forAutoLabel"].forAuto->
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "ForAuto.abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "ForAuto.abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 230:55
posCursor:[230:55] posNoWhite:[230:54] Found expr:[230:3->230:55]
posCursor:[230:55] posNoWhite:[230:54] Found expr:[230:46->230:55]
Pexp_ident ForAuto.a:[230:46->230:55]
Completable: Cpath Value[ForAuto, a]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 234:34
posCursor:[234:34] posNoWhite:[234:33] Found expr:[234:18->234:36]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[234:18->234:34], ...[234:34->234:35])
posCursor:[234:34] posNoWhite:[234:33] Found expr:[234:18->234:34]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[234:18->234:30], ...[234:32->234:34])
posCursor:[234:34] posNoWhite:[234:33] Found expr:[234:32->234:34]
Pexp_ident na:[234:32->234:34]
Completable: Cpath Value[na]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "name",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 237:17
posCursor:[237:17] posNoWhite:[237:14] Found expr:[237:14->237:22]
Completable: Cnone
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[]

Complete src/Completion.res 243:8
posCursor:[243:8] posNoWhite:[243:7] Found expr:[241:8->246:1]
posCursor:[243:8] posNoWhite:[243:7] Found expr:[242:14->243:8]
Pexp_apply ...[243:3->243:4] (...[242:14->242:15], ...[243:5->243:8])
posCursor:[243:8] posNoWhite:[243:7] Found expr:[243:5->243:8]
Pexp_field [243:5->243:7] _:[245:0->243:8]
Completable: Cpath Value[_z].""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "x: int\n\ntype r = {x: int, y: string}",
    "documentation": null
  }, {
    "label": "y",
    "kind": 5,
    "tags": [],
    "detail": "y: string\n\ntype r = {x: int, y: string}",
    "documentation": null
  }]

Complete src/Completion.res 254:17
posCursor:[254:17] posNoWhite:[254:16] Found expr:[254:11->254:17]
Pexp_construct SomeLo:[254:11->254:17] None
Completable: Cpath Value[SomeLo]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "SomeLocalModule",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 256:29
posCursor:[256:29] posNoWhite:[256:28] Found type:[256:13->256:29]
Ptyp_constr SomeLocalModule.:[256:13->256:29]
Completable: Cpath Type[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "zz",
    "kind": 22,
    "tags": [],
    "detail": "type zz = int",
    "documentation": null
  }]

Complete src/Completion.res 261:33
posCursor:[261:33] posNoWhite:[261:32] Found type:[261:17->263:11]
Ptyp_constr SomeLocalModule.:[261:17->263:11]
Completable: Cpath Type[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "zz",
    "kind": 22,
    "tags": [],
    "detail": "type zz = int",
    "documentation": null
  }]

Complete src/Completion.res 268:21
Ptype_variant unary SomeLocal:[268:12->268:21]
Completable: Cpath Value[SomeLocal]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "SomeLocalVariantItem",
    "kind": 4,
    "tags": [],
    "detail": "SomeLocalVariantItem\n\ntype someLocalVariant = SomeLocalVariantItem",
    "documentation": null
  }, {
    "label": "SomeLocalModule",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 271:20
posCursor:[271:20] posNoWhite:[271:19] Found pattern:[271:7->274:3]
posCursor:[271:20] posNoWhite:[271:19] Found type:[271:11->274:3]
Ptyp_constr SomeLocal:[271:11->274:3]
Completable: Cpath Type[SomeLocal]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "SomeLocalModule",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }]

Complete src/Completion.res 275:15
posCursor:[275:15] posNoWhite:[275:14] Found expr:[274:11->278:1]
posCursor:[275:15] posNoWhite:[275:14] Found expr:[275:5->277:3]
posCursor:[275:15] posNoWhite:[275:14] Found expr:[275:13->275:15]
Pexp_ident _w:[275:13->275:15]
Completable: Cpath Value[_w]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "_world",
    "kind": 12,
    "tags": [],
    "detail": "'a",
    "documentation": null
  }]

Complete src/Completion.res 281:22
posCursor:[281:22] posNoWhite:[281:21] Found type:[281:21->281:22]
Ptyp_constr s:[281:21->281:22]
Completable: Cpath Type[s]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "someType",
    "kind": 22,
    "tags": [],
    "detail": "type someType = {hello: string}",
    "documentation": null
  }, {
    "label": "someLocalVariant",
    "kind": 22,
    "tags": [],
    "detail": "type someLocalVariant = SomeLocalVariantItem",
    "documentation": null
  }]

Complete src/Completion.res 291:30
posCursor:[291:30] posNoWhite:[291:29] Found expr:[291:11->291:32]
Pexp_apply ...[291:11->291:28] ()
Completable: CnamedArg(Value[funRecord].someFun, "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~name: string) => unit
[{
    "label": "name",
    "kind": 4,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 296:11
posCursor:[296:11] posNoWhite:[296:10] Found expr:[296:3->296:11]
Pexp_field [296:3->296:10] _:[299:0->296:11]
Completable: Cpath Value[retAA](Nolabel).""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "x",
    "kind": 5,
    "tags": [],
    "detail": "x: int\n\ntype aa = {x: int, name: string}",
    "documentation": null
  }, {
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "name: string\n\ntype aa = {x: int, name: string}",
    "documentation": null
  }]

Complete src/Completion.res 301:13
posCursor:[301:13] posNoWhite:[301:12] Found expr:[301:3->301:13]
Pexp_apply ...[301:3->301:11] ()
Completable: CnamedArg(Value[ff](~c), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (
  ~opt1: int=?,
  ~a: int,
  ~b: int,
  unit,
  ~opt2: int=?,
  unit,
) => int
[{
    "label": "opt1",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }, {
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 304:15
posCursor:[304:15] posNoWhite:[304:14] Found expr:[304:3->304:15]
Pexp_apply ...[304:3->304:13] ()
Completable: CnamedArg(Value[ff](~c)(Nolabel), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~a: int, ~b: int, ~opt2: int=?, unit) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 307:17
posCursor:[307:17] posNoWhite:[307:16] Found expr:[307:3->307:17]
Pexp_apply ...[307:3->307:15] ()
Completable: CnamedArg(Value[ff](~c, Nolabel), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~a: int, ~b: int, ~opt2: int=?, unit) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 310:21
posCursor:[310:21] posNoWhite:[310:20] Found expr:[310:3->310:21]
Pexp_apply ...[310:3->310:19] ()
Completable: CnamedArg(Value[ff](~c, Nolabel, Nolabel), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~a: int, ~b: int) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 313:23
posCursor:[313:23] posNoWhite:[313:22] Found expr:[313:3->313:23]
Pexp_apply ...[313:3->313:21] ()
Completable: CnamedArg(Value[ff](~c, Nolabel, ~b), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~a: int, ~opt2: int=?, unit) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "opt2",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }]

Complete src/Completion.res 316:16
posCursor:[316:16] posNoWhite:[316:15] Found expr:[316:3->316:16]
Pexp_apply ...[316:3->316:14] ()
Completable: CnamedArg(Value[ff](~opt2), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~opt1: int=?, ~a: int, ~b: int, unit, unit, ~c: int) => int
[{
    "label": "opt1",
    "kind": 4,
    "tags": [],
    "detail": "option<int>",
    "documentation": null
  }, {
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "c",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 323:17
posCursor:[323:17] posNoWhite:[323:16] Found expr:[323:3->323:17]
Pexp_apply ...[323:3->323:15] ()
Completable: CnamedArg(Value[withCallback], "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~b: int) => callback
[{
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 326:21
posCursor:[326:21] posNoWhite:[326:20] Found expr:[326:3->326:21]
Pexp_apply ...[326:3->326:19] ()
Completable: CnamedArg(Value[withCallback](~a), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~b: int) => int
[{
    "label": "b",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 329:21
posCursor:[329:21] posNoWhite:[329:20] Found expr:[329:3->329:21]
Pexp_apply ...[329:3->329:19] ()
Completable: CnamedArg(Value[withCallback](~b), "", [])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (~a: int) => int
[{
    "label": "a",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 336:26
posCursor:[336:26] posNoWhite:[336:25] Found expr:[333:3->346:23]
JSX <div:[333:3->333:6] onClick[334:4->334:11]=...[334:13->346:23]> _children:None
posCursor:[336:26] posNoWhite:[336:25] Found expr:[334:13->346:23]
posCursor:[336:26] posNoWhite:[336:25] Found expr:[334:13->338:6]
posCursor:[336:26] posNoWhite:[336:25] Found expr:[335:6->338:5]
posCursor:[336:26] posNoWhite:[336:25] Found expr:[336:16->338:5]
posCursor:[336:26] posNoWhite:[336:25] Found pattern:[336:20->338:5]
posCursor:[336:26] posNoWhite:[336:25] Found type:[336:23->338:5]
Ptyp_constr Res:[336:23->338:5]
Completable: Cpath Type[Res]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "Result",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }, {
    "label": "RescriptCore",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RescriptReactErrorBoundary",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RescriptReactRouter",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }]

Complete src/Completion.res 343:57
posCursor:[343:57] posNoWhite:[343:56] Found expr:[343:10->346:23]
posCursor:[343:57] posNoWhite:[343:56] Found expr:[343:53->346:23]
posCursor:[343:57] posNoWhite:[343:56] Found expr:[343:53->343:57]
Pexp_ident this:[343:53->343:57]
Completable: Cpath Value[this]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "thisIsNotSaved",
    "kind": 12,
    "tags": [],
    "detail": "\\\"Type Not Known\"",
    "documentation": null
  }]

Hover src/Completion.res 346:14
Nothing at that position. Now trying to use completion.
posCursor:[346:14] posNoWhite:[346:13] Found expr:[346:9->346:23]
JSX <div:[346:9->346:12] name[346:13->346:17]=...[346:18->346:20]> _children:346:21
Completable: Cjsx([div], name, [name])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
{"contents": {"kind": "markdown", "value": "```rescript\nstring\n```"}}

Hover src/Completion.res 349:17
Nothing at that position. Now trying to use completion.
posCursor:[349:17] posNoWhite:[349:16] Found expr:[349:11->349:35]
Pexp_send age[349:30->349:33] e:[349:11->349:28]
posCursor:[349:17] posNoWhite:[349:16] Found expr:[349:11->349:28]
Pexp_ident FAO.forAutoObject:[349:11->349:28]
Completable: Cpath Value[FAO, forAutoObject]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
{"contents": {"kind": "markdown", "value": "```rescript\n{\"age\": int, \"forAutoLabel\": FAR.forAutoRecord}\n```"}}

Hover src/Completion.res 352:17
Nothing at that position. Now trying to use completion.
posCursor:[352:17] posNoWhite:[352:16] Found expr:[352:11->352:22]
Pexp_apply ...[352:11->352:13] (~opt1352:15->352:19=...[352:20->352:21])
Completable: CnamedArg(Value[ff], opt1, [opt1])
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Found type for function (
  ~opt1: int=?,
  ~a: int,
  ~b: int,
  unit,
  ~opt2: int=?,
  unit,
  ~c: int,
) => int
{"contents": {"kind": "markdown", "value": "```rescript\noption<int>\n```"}}

Complete src/Completion.res 355:23
posCursor:[355:23] posNoWhite:[355:22] Found expr:[0:-1->355:23]
posCursor:[355:23] posNoWhite:[355:22] Found expr:[355:12->355:23]
[]

Complete src/Completion.res 362:8
posCursor:[362:8] posNoWhite:[362:7] Found expr:[360:8->365:3]
posCursor:[362:8] posNoWhite:[362:7] Found expr:[361:2->365:3]
posCursor:[362:8] posNoWhite:[362:7] Found pattern:[362:7->364:5]
posCursor:[362:8] posNoWhite:[362:7] Found pattern:[362:7->362:8]
Ppat_construct T:[362:7->362:8]
Completable: Cpattern Value[x]=T
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "That",
    "kind": 4,
    "tags": [],
    "detail": "That\n\ntype v = This | That",
    "documentation": null
  }, {
    "label": "This",
    "kind": 4,
    "tags": [],
    "detail": "This\n\ntype v = This | That",
    "documentation": null
  }, {
    "label": "TypedArray",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }, {
    "label": "Type",
    "kind": 9,
    "tags": [],
    "detail": "module",
    "documentation": null
  }, {
    "label": "TableclothMap",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "TypeDefinition",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }]

Complete src/Completion.res 373:21
posCursor:[373:21] posNoWhite:[373:20] Found expr:[371:8->376:3]
posCursor:[373:21] posNoWhite:[373:20] Found expr:[372:2->376:3]
posCursor:[373:21] posNoWhite:[373:20] Found pattern:[373:7->375:5]
posCursor:[373:21] posNoWhite:[373:20] Found pattern:[373:7->373:21]
Ppat_construct AndThatOther.T:[373:7->373:21]
Completable: Cpath Value[AndThatOther, T]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "ThatOther",
    "kind": 4,
    "tags": [],
    "detail": "ThatOther\n\ntype v = And | ThatOther",
    "documentation": null
  }]

Complete src/Completion.res 378:24
posCursor:[378:24] posNoWhite:[378:23] Found expr:[378:12->378:26]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[378:12->378:24], ...[378:24->378:25])
posCursor:[378:24] posNoWhite:[378:23] Found expr:[378:12->378:24]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[378:12->378:14], ...[378:16->378:24])
posCursor:[378:24] posNoWhite:[378:23] Found expr:[378:16->378:24]
Pexp_ident ForAuto.:[378:16->378:24]
Completable: Cpath Value[ForAuto, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "abc",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }, {
    "label": "abd",
    "kind": 12,
    "tags": [],
    "detail": "(t, int) => t",
    "documentation": null
  }]

Complete src/Completion.res 381:38
posCursor:[381:38] posNoWhite:[381:37] Found expr:[381:12->381:41]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[381:12->381:39], ...[381:39->381:40])
posCursor:[381:38] posNoWhite:[381:37] Found expr:[381:12->381:39]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[381:12->381:17], ...[381:19->381:39])
posCursor:[381:38] posNoWhite:[381:37] Found expr:[381:19->381:39]
Pexp_send [381:38->381:38] e:[381:19->381:36]
Completable: Cpath Value[FAO, forAutoObject][""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "age",
    "kind": 4,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "forAutoLabel",
    "kind": 4,
    "tags": [],
    "detail": "FAR.forAutoRecord",
    "documentation": null
  }]

Complete src/Completion.res 384:24
posCursor:[384:24] posNoWhite:[384:23] Found expr:[384:11->384:26]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[384:11->384:24], ...[384:24->384:25])
posCursor:[384:24] posNoWhite:[384:23] Found expr:[384:11->384:24]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[384:11->384:12], ...[384:14->384:24])
posCursor:[384:24] posNoWhite:[384:23] Found expr:[384:14->384:24]
Pexp_field [384:14->384:23] _:[384:24->384:24]
Completable: Cpath Value[funRecord].""
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "someFun",
    "kind": 5,
    "tags": [],
    "detail": "someFun: (~name: string) => unit\n\ntype funRecord = {\n  someFun: (~name: string) => unit,\n  stuff: string,\n}",
    "documentation": null
  }, {
    "label": "stuff",
    "kind": 5,
    "tags": [],
    "detail": "stuff: string\n\ntype funRecord = {\n  someFun: (~name: string) => unit,\n  stuff: string,\n}",
    "documentation": null
  }]

Complete src/Completion.res 389:12
posCursor:[389:12] posNoWhite:[389:11] Found expr:[387:8->392:1]
posCursor:[389:12] posNoWhite:[389:11] Found expr:[388:2->391:4]
posCursor:[389:12] posNoWhite:[389:11] Found expr:[389:6->391:4]
posCursor:[389:12] posNoWhite:[389:11] Found expr:[389:6->389:12]
Completable: Cpath array->ma
Raw opens: 3 Js.place holder ... Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 4 Completion.res Completion.res js.ml RescriptCore.res
[{
    "label": "Array.map",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "Array.mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, ('a, int) => 'b) => array<'b>",
    "documentation": null
  }]

Complete src/Completion.res 397:14
posCursor:[397:14] posNoWhite:[397:13] Found expr:[396:14->397:20]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[396:14->397:16], ...[397:16->397:19])
posCursor:[397:14] posNoWhite:[397:13] Found expr:[396:14->397:16]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[396:14->397:11], ...[397:13->397:16])
posCursor:[397:14] posNoWhite:[397:13] Found expr:[397:13->397:16]
Pexp_ident red:[397:13->397:16]
Completable: Cpath Value[red]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "red",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 402:25
posCursor:[402:25] posNoWhite:[402:24] Found expr:[400:14->402:31]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[400:14->402:27], ...[402:27->402:30])
posCursor:[402:25] posNoWhite:[402:24] Found expr:[400:14->402:27]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[400:14->402:22], ...[402:24->402:27])
posCursor:[402:25] posNoWhite:[402:24] Found expr:[402:24->402:27]
Pexp_ident red:[402:24->402:27]
Completable: Cpath Value[red]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "red",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }]

Complete src/Completion.res 405:22
posCursor:[405:22] posNoWhite:[405:21] Found expr:[405:11->453:0]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[405:11->423:17], ...[428:0->453:0])
posCursor:[405:22] posNoWhite:[405:21] Found expr:[405:11->423:17]
Pexp_apply ...__ghost__[0:-1->0:-1] (...[405:11->405:19], ...[405:21->423:17])
posCursor:[405:22] posNoWhite:[405:21] Found expr:[405:21->423:17]
posCursor:[405:22] posNoWhite:[405:21] Found expr:[405:21->405:22]
Pexp_ident r:[405:21->405:22]
Completable: Cpath Value[r]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "red",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null
  }, {
    "label": "retAA",
    "kind": 12,
    "tags": [],
    "detail": "unit => aa",
    "documentation": null
  }, {
    "label": "r",
    "kind": 12,
    "tags": [],
    "detail": "rAlias",
    "documentation": null
  }]

Complete src/Completion.res 409:21
posCursor:[409:21] posNoWhite:[409:20] Found expr:[408:14->415:1]
posCursor:[409:21] posNoWhite:[409:20] Found expr:[409:5->414:17]
posCursor:[409:21] posNoWhite:[409:20] Found expr:[409:5->411:42]
posCursor:[409:21] posNoWhite:[409:20] Found expr:[409:5->411:5]
Pexp_ident SomeLocalModule.:[409:5->411:5]
Completable: Cpath Value[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "bb",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "aa",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 412:21
posCursor:[412:21] posNoWhite:[412:20] Found expr:[408:14->415:1]
posCursor:[412:21] posNoWhite:[412:20] Found expr:[411:2->414:17]
posCursor:[412:21] posNoWhite:[412:20] Found expr:[412:5->414:17]
Pexp_apply ...[412:5->414:8] (...[414:9->414:16])
posCursor:[412:21] posNoWhite:[412:20] Found expr:[412:5->414:8]
Pexp_ident SomeLocalModule.:[412:5->414:8]
Completable: Cpath Value[SomeLocalModule, ""]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "bb",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "aa",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }]

Complete src/Completion.res 417:17
posCursor:[417:17] posNoWhite:[417:16] Found expr:[417:11->417:17]
Completable: Cpath int->t
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "Int.toStringWithRadix",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~radix: int) => string",
    "documentation": null
  }, {
    "label": "Int.toExponentialWithPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~digits: int) => string",
    "documentation": null
  }, {
    "label": "Int.toPrecisionWithPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~digits: int) => string",
    "documentation": null
  }, {
    "label": "Int.toFixedWithPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(int, ~digits: int) => string",
    "documentation": null
  }, {
    "label": "Int.toPrecision",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": null
  }, {
    "label": "Int.toString",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": null
  }, {
    "label": "Int.toFloat",
    "kind": 12,
    "tags": [],
    "detail": "int => float",
    "documentation": null
  }, {
    "label": "Int.toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": null
  }, {
    "label": "Int.toFixed",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": null
  }, {
    "label": "Int.toExponential",
    "kind": 12,
    "tags": [],
    "detail": "int => string",
    "documentation": null
  }]

Complete src/Completion.res 420:19
posCursor:[420:19] posNoWhite:[420:18] Found expr:[420:11->420:19]
Completable: Cpath float->t
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "Float.toStringWithRadix",
    "kind": 12,
    "tags": [],
    "detail": "(float, ~radix: int) => string",
    "documentation": null
  }, {
    "label": "Float.toExponentialWithPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(float, ~digits: int) => string",
    "documentation": null
  }, {
    "label": "Float.toInt",
    "kind": 12,
    "tags": [],
    "detail": "float => int",
    "documentation": null
  }, {
    "label": "Float.toFixedWithPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(float, ~digits: int) => string",
    "documentation": null
  }, {
    "label": "Float.toPrecisionWithPrecision",
    "kind": 12,
    "tags": [],
    "detail": "(float, ~digits: int) => string",
    "documentation": null
  }, {
    "label": "Float.toPrecision",
    "kind": 12,
    "tags": [],
    "detail": "float => string",
    "documentation": null
  }, {
    "label": "Float.toString",
    "kind": 12,
    "tags": [],
    "detail": "float => string",
    "documentation": null
  }, {
    "label": "Float.toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "float => string",
    "documentation": null
  }, {
    "label": "Float.toExponential",
    "kind": 12,
    "tags": [],
    "detail": "float => string",
    "documentation": null
  }, {
    "label": "Float.toFixed",
    "kind": 12,
    "tags": [],
    "detail": "float => string",
    "documentation": null
  }]

Complete src/Completion.res 425:8
posCursor:[425:8] posNoWhite:[425:7] Found expr:[425:3->425:8]
Completable: Cpath Value[ok]->g
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "Result.getExn",
    "kind": 12,
    "tags": [],
    "detail": "t<'a, 'b> => 'a",
    "documentation": {"kind": "markdown", "value": "\n  `getExn(res)`: when `res` is `Ok(n)`, returns `n` when `res` is `Error(m)`, raise an exception\n\n  ```res example\n  Result.getExn(Result.Ok(42)) == 42\n\n  Result.getExn(Result.Error(\"Invalid data\")) /* raises exception */\n  ```\n"}
  }, {
    "label": "Result.getWithDefault",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a, 'b>, 'a) => 'a",
    "documentation": {"kind": "markdown", "value": "\n  `getWithDefault(res, defaultValue)`: If `res` is `Ok(n)`, returns `n`,\n  otherwise `default`\n\n  ```res example\n  Result.getWithDefault(Ok(42), 0) == 42\n\n  Result.getWithDefault(Error(\"Invalid Data\"), 0) == 0\n  ```\n"}
  }]

Complete src/Completion.res 443:15
posCursor:[443:15] posNoWhite:[443:14] Found expr:[443:3->443:15]
Pexp_field [443:3->443:12] so:[443:13->443:15]
Completable: Cpath Value[rWithDepr].so
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "someInt",
    "kind": 5,
    "tags": [1],
    "detail": "someInt: int\n\ntype someRecordWithDeprecatedField = {\n  name: string,\n  someInt: int,\n  someFloat: float,\n}",
    "documentation": {"kind": "markdown", "value": "Deprecated: \n\n"}
  }, {
    "label": "someFloat",
    "kind": 5,
    "tags": [1],
    "detail": "someFloat: float\n\ntype someRecordWithDeprecatedField = {\n  name: string,\n  someInt: int,\n  someFloat: float,\n}",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use 'someInt'.\n\n"}
  }]

Complete src/Completion.res 450:37
XXX Not found!
Completable: Cexpression Type[someVariantWithDeprecated]
Raw opens: 2 Shadow.B.place holder ... Shadow.A.place holder
Package opens RescriptCore.place holder
Resolved opens 3 Completion.res Completion.res RescriptCore.res
[{
    "label": "DoNotUseMe",
    "kind": 4,
    "tags": [1],
    "detail": "DoNotUseMe\n\ntype someVariantWithDeprecated =\n  | DoNotUseMe\n  | UseMeInstead\n  | AndNotMe",
    "documentation": {"kind": "markdown", "value": "Deprecated: \n\n"},
    "insertText": "DoNotUseMe",
    "insertTextFormat": 2
  }, {
    "label": "UseMeInstead",
    "kind": 4,
    "tags": [],
    "detail": "UseMeInstead\n\ntype someVariantWithDeprecated =\n  | DoNotUseMe\n  | UseMeInstead\n  | AndNotMe",
    "documentation": null,
    "insertText": "UseMeInstead",
    "insertTextFormat": 2
  }, {
    "label": "AndNotMe",
    "kind": 4,
    "tags": [1],
    "detail": "AndNotMe\n\ntype someVariantWithDeprecated =\n  | DoNotUseMe\n  | UseMeInstead\n  | AndNotMe",
    "documentation": {"kind": "markdown", "value": "Deprecated: Use 'UseMeInstead'\n\n"},
    "insertText": "AndNotMe",
    "insertTextFormat": 2
  }]

