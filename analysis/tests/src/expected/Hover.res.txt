Hover src/Hover.res 0:4
{"contents": "```rescript\nint\n```"}

Hover src/Hover.res 3:5
{"contents": "```rescript\ntype t = (int, float)\n```"}

Hover src/Hover.res 6:7
{"contents": "```rescript\nmodule Id = {\n  type x = int\n}\n```"}

Hover src/Hover.res 19:11
{"contents": "\nThis module is commented\n```rescript\nmodule Dep = {\n  let customDouble: int => int\n}\n```"}

Hover src/Hover.res 22:11
{"contents": "```rescript\nint => int\n```\n\nSome doc comment"}

Hover src/Hover.res 26:6
{"contents": "```rescript\nint\n```"}

Hover src/Hover.res 33:4
{"contents": "```rescript\nunit => int\n```\n\nDoc comment for functionWithTypeAnnotation"}

Hover src/Hover.res 37:13
getLocItem #5: heuristic for JSX and compiler combined:
~x becomes Props#x
heuristic for: [Props, x], give loc of `x`
n1:Props n2:name
{"contents": "```rescript\nstring\n```"}

Hover src/Hover.res 42:15
getLocItem #7: heuristic for JSX on type-annotated labeled (~arg:t):
(~arg:t) becomes Props#arg
Props has the location range of arg:t
arg has the location range of arg
heuristic for: [Props, arg], give loc of `arg`
n1:Props n2:name
{"contents": "```rescript\nstring\n```"}

Hover src/Hover.res 46:10
{"contents": "```rescript\nint\n```"}

Hover src/Hover.res 49:13
{"contents": "```rescript\nmodule Logger = {\n  let log: string => unit\n}\n```"}

Hover src/Hover.res 54:7
{"contents": "```rescript\nmodule Logger = {\n  let log: string => unit\n}\n```"}

Definition src/Hover.res 60:14
{"uri": "Hover.res", "range": {"start": {"line": 49, "character": 12}, "end": {"line": 49, "character": 18}}}

Hover src/Hover.res 63:9
{"contents": "```rescript\nmodule IdDefinedTwice = {\n  let y: int\n  let _x: int\n}\n```"}

Hover src/Hover.res 74:7
{"contents": "```rescript\nmodule A = {\n  let x: int\n}\n```"}

Hover src/Hover.res 77:7
{"contents": "```rescript\nmodule A = {\n  let x: int\n}\n```"}

Hover src/Hover.res 91:10
Nothing at that position. Now trying to use completion.
posCursor:[91:10] posNoWhite:[91:8] Found expr:[88:3->91:9]
JSX <Comp:[88:3->88:7] > _children:88:7
null

Hover src/Hover.res 98:10
Nothing at that position. Now trying to use completion.
posCursor:[98:10] posNoWhite:[98:9] Found expr:[95:3->98:10]
JSX <Comp1:[95:3->95:8] > _children:95:8
null

Hover src/Hover.res 103:25
{"contents": "```rescript\nfloat\n```"}

Hover src/Hover.res 106:21
{"contents": "```rescript\nint\n```"}

Hover src/Hover.res 116:16
{"contents": "```rescript\nAA.cond<[< #str(string)]> => AA.cond<[< #str(string)]>\n```"}

Hover src/Hover.res 119:25
{"contents": "```rescript\nAA.cond<[< #str(string)]> => AA.cond<[< #str(string)]>\n```"}

Hover src/Hover.res 122:3
Nothing at that position. Now trying to use completion.
Attribute id:live:[122:0->122:5] label:live
Completable: Cdecorator(live)
{"contents": "The `@live` decorator is for reanalyze, a static analysis tool for ReScript that can do dead code analysis.\n\n`@live` tells the dead code analysis that the value should be considered live, even though it might appear to be dead. This is typically used in case of FFI where there are indirect ways to access values. It can be added to everything that could otherwise be considered unused by the dead code analysis - values, functions, arguments, records, individual record fields, and so on.\n\n[Read more and see examples in the documentation](https://rescript-lang.org/syntax-lookup#live-decorator).\n\nHint: Did you know you can run an interactive code analysis in your project by running the command `> ReScript: Start Code Analyzer`? Try it!"}

Hover src/Hover.res 125:4
{"contents": "```rescript\n(. ()) => unit => int\n```"}

Hover src/Hover.res 131:4
{"contents": "```rescript\n(. ()) => (. ()) => int\n```"}

Hover src/Hover.res 134:4
{"contents": "```rescript\n(. unit, unit) => int\n```"}

Hover src/Hover.res 137:5
{"contents": "```rescript\n(. ()) => unit => int\n```"}

Hover src/Hover.res 144:9
{"contents": "```rescript\nint\n```\n\ndoc comment 1"}

Hover src/Hover.res 148:6
{"contents": "```rescript\nint\n```\n\n doc comment 2 "}

Hover src/Hover.res 165:23
{"contents": "```rescript\nfoo<bar>\n```\n\n```rescript\ntype foo<'a> = {content: 'a, zzz: string}\n```"}

Hover src/Hover.res 167:22
{"contents": "```rescript\nfoobar\n```\n\n```rescript\ntype foobar = foo<bar>\n```"}

Complete src/Hover.res 170:16
posCursor:[170:16] posNoWhite:[170:15] Found expr:[170:5->170:16]
Pexp_field [170:5->170:15] _:[176:2->170:16]
Completable: Cpath Value[x1].content.""
[{
    "label": "age",
    "kind": 5,
    "tags": [],
    "detail": "age: int\n\ntype bar = {age: int}",
    "documentation": null
  }]

Complete src/Hover.res 173:16
posCursor:[173:16] posNoWhite:[173:15] Found expr:[173:5->173:16]
Pexp_field [173:5->173:15] _:[176:2->173:16]
Completable: Cpath Value[x2].content.""
[{
    "label": "age",
    "kind": 5,
    "tags": [],
    "detail": "age: int\n\ntype bar = {age: int}",
    "documentation": null
  }]

Complete src/Hover.res 182:16
posCursor:[182:16] posNoWhite:[182:15] Found expr:[182:5->182:16]
Pexp_field [182:5->182:15] _:[187:0->182:16]
Completable: Cpath Value[y1].content.""
[{
    "label": "age",
    "kind": 5,
    "tags": [],
    "detail": "age: int\n\ntype bar = {age: int}",
    "documentation": null
  }]

Complete src/Hover.res 185:16
posCursor:[185:16] posNoWhite:[185:15] Found expr:[185:5->185:16]
Pexp_field [185:5->185:15] _:[187:0->185:16]
Completable: Cpath Value[y2].content.""
[{
    "label": "age",
    "kind": 5,
    "tags": [],
    "detail": "age: int\n\ntype bar = {age: int}",
    "documentation": null
  }]

