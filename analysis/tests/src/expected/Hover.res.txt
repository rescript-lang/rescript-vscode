Hover tests/src/Hover.res 0:4
{"contents": "```rescript\nint\n```"}

Hover tests/src/Hover.res 3:5
{"contents": "```rescript\ntype t = (int, float)\n```"}

Hover tests/src/Hover.res 6:7
{"contents": "```rescript\nmodule Id = {\n  type x = int\n}\n```"}

Hover tests/src/Hover.res 19:11
{"contents": "\nThis module is commented\n```rescript\nmodule Dep = {\n  let customDouble: int => int\n}\n```"}

Hover tests/src/Hover.res 22:11
{"contents": "```rescript\nint => int\n```\n\nSome doc comment"}

Hover tests/src/Hover.res 26:6
{"contents": "```rescript\nint\n```"}

Hover tests/src/Hover.res 33:4
{"contents": "```rescript\nunit => int\n```\n\nDoc comment for functionWithTypeAnnotation"}

Hover tests/src/Hover.res 37:13
{"contents": "```rescript\nstring\n```"}

Hover tests/src/Hover.res 41:13
{"contents": "```rescript\nstring\n```"}

Hover tests/src/Hover.res 44:10
{"contents": "```rescript\nint\n```"}

Hover tests/src/Hover.res 47:13
{"contents": "```rescript\nmodule Logger = {\n  let log: string => unit\n}\n```"}

Hover tests/src/Hover.res 52:7
{"contents": "```rescript\nmodule Logger = {\n  let log: string => unit\n}\n```"}

Definition tests/src/Hover.res 58:14
{"uri": "Hover.res", "range": {"start": {"line": 47, "character": 12}, "end": {"line": 47, "character": 18}}}

Hover tests/src/Hover.res 61:9
{"contents": "```rescript\nmodule IdDefinedTwice = {\n  let y: int\n  let _x: int\n}\n```"}

Hover tests/src/Hover.res 72:7
{"contents": "```rescript\nmodule A = {\n  let x: int\n}\n```"}

Hover tests/src/Hover.res 75:7
{"contents": "```rescript\nmodule A = {\n  let x: int\n}\n```"}

Hover tests/src/Hover.res 85:10
{"contents": "```rescript\n{\"children\": React.element} => React.element\n```"}

Hover tests/src/Hover.res 88:10
{"contents": "```rescript\n{\"children\": React.element} => React.element\n```"}

Hover tests/src/Hover.res 93:25
{"contents": "```rescript\nfloat\n```"}

Hover tests/src/Hover.res 96:21
{"contents": "```rescript\nint\n```"}

Hover tests/src/Hover.res 105:6
{"contents": "```rescript\nAA.cond<[< #str(string)]> => AA.t<[< #str(string)]>\n```"}

Hover tests/src/Hover.res 108:24
{"contents": "```rescript\nAA.cond<\n  [< #str(string) & (string) & (string)],\n> => AA.t<[< #str(string) & (string) & (string)]>\n```"}

