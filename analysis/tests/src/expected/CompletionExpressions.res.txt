Complete src/CompletionExpressions.res 3:20
XXX Not found!
Completable: Cpattern CTuple(Value[s], Value[f])
[{
    "label": "(_, _)",
    "kind": 12,
    "tags": [],
    "detail": "(bool, option<array<bool>>)",
    "documentation": null,
    "insertText": "(${1:_}, ${2:_})",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 26:27
posCursor:[26:27] posNoWhite:[26:26] Found expr:[26:11->26:29]
Pexp_apply ...[26:11->26:25] (...[26:26->26:28])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordBody
[{
    "label": "age",
    "kind": 5,
    "tags": [],
    "detail": "age: int\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "offline",
    "kind": 5,
    "tags": [],
    "detail": "offline: bool\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "online",
    "kind": 5,
    "tags": [],
    "detail": "online: option<bool>\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "variant",
    "kind": 5,
    "tags": [],
    "detail": "variant: someVariant\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "polyvariant",
    "kind": 5,
    "tags": [],
    "detail": "polyvariant: somePolyVariant\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "nested",
    "kind": 5,
    "tags": [],
    "detail": "nested: option<otherRecord>\n\nsomeRecord",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 29:28
posCursor:[29:28] posNoWhite:[29:27] Found expr:[29:11->29:30]
Pexp_apply ...[29:11->29:25] (...[29:27->29:28])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)=n->recordBody
[{
    "label": "nested",
    "kind": 5,
    "tags": [],
    "detail": "nested: option<otherRecord>\n\nsomeRecord",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 32:35
posCursor:[32:35] posNoWhite:[32:34] Found expr:[32:11->32:38]
Pexp_apply ...[32:11->32:25] (...[32:26->32:38])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(offline)
[{
    "label": "true",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "false",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 35:36
posCursor:[35:36] posNoWhite:[35:35] Found expr:[35:11->35:39]
Pexp_apply ...[35:11->35:25] (...[35:26->35:38])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordBody
[{
    "label": "offline",
    "kind": 5,
    "tags": [],
    "detail": "offline: bool\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "online",
    "kind": 5,
    "tags": [],
    "detail": "online: option<bool>\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "variant",
    "kind": 5,
    "tags": [],
    "detail": "variant: someVariant\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "polyvariant",
    "kind": 5,
    "tags": [],
    "detail": "polyvariant: somePolyVariant\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "nested",
    "kind": 5,
    "tags": [],
    "detail": "nested: option<otherRecord>\n\nsomeRecord",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 38:37
posCursor:[38:37] posNoWhite:[38:35] Found expr:[38:11->38:53]
Pexp_apply ...[38:11->38:25] (...[38:26->38:52])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordBody
[{
    "label": "online",
    "kind": 5,
    "tags": [],
    "detail": "online: option<bool>\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "variant",
    "kind": 5,
    "tags": [],
    "detail": "variant: someVariant\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "polyvariant",
    "kind": 5,
    "tags": [],
    "detail": "polyvariant: somePolyVariant\n\nsomeRecord",
    "documentation": null
  }, {
    "label": "nested",
    "kind": 5,
    "tags": [],
    "detail": "nested: option<otherRecord>\n\nsomeRecord",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 41:44
posCursor:[41:44] posNoWhite:[41:43] Found expr:[41:11->41:47]
Pexp_apply ...[41:11->41:25] (...[41:26->41:47])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(nested)
[{
    "label": "None",
    "kind": 4,
    "tags": [],
    "detail": "otherRecord",
    "documentation": null
  }, {
    "label": "Some(_)",
    "kind": 4,
    "tags": [],
    "detail": "otherRecord",
    "documentation": null,
    "insertText": "Some(${1:_})",
    "insertTextFormat": 2
  }, {
    "label": "Some({})",
    "kind": 12,
    "tags": [],
    "detail": "otherRecord",
    "documentation": null,
    "insertText": "Some({$0})",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 44:46
posCursor:[44:46] posNoWhite:[44:45] Found expr:[44:11->44:49]
Pexp_apply ...[44:11->44:25] (...[44:26->44:48])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(nested), recordBody
[{
    "label": "fnTakingRecord",
    "kind": 12,
    "tags": [],
    "detail": "someRecord => unit",
    "documentation": null
  }, {
    "label": "f",
    "kind": 12,
    "tags": [],
    "detail": "option<array<bool>>",
    "documentation": null
  }, {
    "label": "s",
    "kind": 12,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Arg",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Array",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ArrayLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Auto",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Array",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Float",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_HashMap",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_HashMapInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_HashMapString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_HashSet",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_HashSetInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_HashSetString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Id",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Int",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_List",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Map",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MapDict",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MapInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MapString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableMap",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableMapInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableMapString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableQueue",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableSet",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableSetInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableSetString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_MutableStack",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Option",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Range",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Result",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_Set",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_SetDict",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_SetInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_SetString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_SortArray",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_SortArrayInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_SortArrayString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalAVLset",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalAVLtree",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalBuckets",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalBucketsType",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalMapInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalMapString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalSetBuckets",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalSetInt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internalSetString",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Belt_internals",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "BrokenParserCases",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Buffer",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Bytes",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "BytesLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Callback",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CamlinternalLazy",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CamlinternalMod",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Char",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CodeLens",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletePrioritize1",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletePrioritize2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Completion",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionExpressions",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionFunctionArguments",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionJsx",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionJsxProps",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionPattern",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionPipeChain",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionPipeSubmodules",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionSupport",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CompletionTypeAnnotation",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Complex",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Component",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ComponentInner",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "CreateInterface",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Cross",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Dce",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "DceTest",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Debug",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Definition",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "DefinitionWithInterface",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Destructuring",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Digest",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Div",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "DocComments",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "DocumentSymbol",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Dom",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Dom_storage",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Dom_storage2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ExhaustiveSwitch",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Filename",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Fragment",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Genlex",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Hashtbl",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "HashtblLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Highlight",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Hover",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "InlayHint",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Int32",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Int64",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_OO",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_array",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_array2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_bigint",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_cast",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_console",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_date",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_dict",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_exn",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_float",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_global",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_int",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_json",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_list",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_map",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_mapperRt",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_math",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_null",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_null_undefined",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_obj",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_option",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_promise",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_promise2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_re",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_result",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_set",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_string",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_string2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_typed_array",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_typed_array2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_types",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_undefined",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_vector",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_weakmap",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Js_weakset",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Jsx",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Jsx2",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "JsxDOM",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "JsxDOMStyle",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "JsxEvent",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "JsxPPXReactSupport",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "JsxV4",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Lazy",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Lexing",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "List",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ListLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "LongIdentTest",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Map",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "MapLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "MoreLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node_buffer",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node_child_process",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node_fs",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node_module",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node_path",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Node_process",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Obj",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Object",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Parsing",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Patterns",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Pervasives",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Printexc",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Queue",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Random",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "React",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactDOM",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactDOMRe",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactDOMServer",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactDOMStyle",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactDOMStyle_V3",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactDOM_V3",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactEvent",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactEvent_V3",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactTestUtils",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReactV3",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "React_V3",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReasonReact",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RecModules",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RecordCompletion",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RecoveryOnProp",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "References",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReferencesInner",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "ReferencesWithInterface",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Rename",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RenameWithInterface",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RescriptReactErrorBoundary",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "RescriptReactRouter",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Set",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "SetLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "SignatureHelp",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Sort",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Stack",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "StdLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Stream",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "String",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "StringLabels",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Sys",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "TableclothMap",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "TypeDefinition",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Uchar",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Xform",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 47:51
posCursor:[47:51] posNoWhite:[47:50] Found expr:[47:11->47:55]
Pexp_apply ...[47:11->47:25] (...[47:26->47:54])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(nested), variantPayload::Some($0), recordBody
[{
    "label": "someField",
    "kind": 5,
    "tags": [],
    "detail": "someField: int\n\notherRecord",
    "documentation": null
  }, {
    "label": "otherField",
    "kind": 5,
    "tags": [],
    "detail": "otherField: string\n\notherRecord",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 50:45
posCursor:[50:45] posNoWhite:[50:44] Found expr:[50:11->50:48]
Pexp_apply ...[50:11->50:25] (...[50:26->50:48])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(variant)
[{
    "label": "One",
    "kind": 4,
    "tags": [],
    "detail": "One\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "One",
    "insertTextFormat": 2
  }, {
    "label": "Two",
    "kind": 4,
    "tags": [],
    "detail": "Two\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "Two",
    "insertTextFormat": 2
  }, {
    "label": "Three(_, _)",
    "kind": 4,
    "tags": [],
    "detail": "Three(int, string)\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "Three(${1:_}, ${2:_})",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 53:47
posCursor:[53:47] posNoWhite:[53:46] Found expr:[53:11->53:50]
Pexp_apply ...[53:11->53:25] (...[53:26->53:49])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)=O->recordField(variant)
[{
    "label": "One",
    "kind": 4,
    "tags": [],
    "detail": "One\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "sortText": "A One",
    "insertText": "One",
    "insertTextFormat": 2
  }, {
    "label": "Obj",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }, {
    "label": "Object",
    "kind": 9,
    "tags": [],
    "detail": "file module",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 56:57
posCursor:[56:57] posNoWhite:[56:56] Found expr:[56:11->56:61]
Pexp_apply ...[56:11->56:25] (...[56:26->56:60])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(polyvariant), polyvariantPayload::three($0)
[{
    "label": "{}",
    "kind": 12,
    "tags": [],
    "detail": "someRecord",
    "documentation": null,
    "sortText": "A",
    "insertText": "{$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 59:60
posCursor:[59:60] posNoWhite:[59:59] Found expr:[59:11->59:65]
Pexp_apply ...[59:11->59:25] (...[59:26->59:64])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)->recordField(polyvariant), polyvariantPayload::three($1)
[{
    "label": "true",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "false",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 62:62
posCursor:[62:62] posNoWhite:[62:61] Found expr:[62:11->62:66]
Pexp_apply ...[62:11->62:25] (...[62:26->62:65])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)=t->recordField(polyvariant), polyvariantPayload::three($1)
[{
    "label": "true",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 69:25
posCursor:[69:25] posNoWhite:[69:24] Found expr:[69:11->69:26]
Pexp_apply ...[69:11->69:24] (...[69:25->69:26])
Completable: Cexpression CArgument Value[fnTakingArray]($0)
[{
    "label": "[]",
    "kind": 12,
    "tags": [],
    "detail": "option<bool>",
    "documentation": null,
    "sortText": "A",
    "insertText": "[$0]",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 72:26
posCursor:[72:26] posNoWhite:[72:25] Found expr:[72:11->72:28]
Pexp_apply ...[72:11->72:24] (...[72:25->72:27])
Completable: Cexpression CArgument Value[fnTakingArray]($0)->array
[{
    "label": "None",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Some(_)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null,
    "insertText": "Some(${1:_})",
    "insertTextFormat": 2
  }, {
    "label": "Some(true)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Some(false)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 75:26
posCursor:[75:26] posNoWhite:[75:25] Found expr:[75:11->75:27]
Pexp_apply ...[75:11->75:24] (...[75:25->75:26])
Completable: Cexpression CArgument Value[fnTakingArray]($0)=s
[{
    "label": "s",
    "kind": 12,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 78:31
posCursor:[78:31] posNoWhite:[78:30] Found expr:[78:11->78:34]
Pexp_apply ...[78:11->78:24] (...[78:25->78:33])
Completable: Cexpression CArgument Value[fnTakingArray]($0)->array, variantPayload::Some($0)
[{
    "label": "true",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "false",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 81:31
posCursor:[81:31] posNoWhite:[81:30] Found expr:[81:11->81:34]
Pexp_apply ...[81:11->81:24] (...[81:25->81:33])
Completable: Cexpression CArgument Value[fnTakingArray]($0)->array
[{
    "label": "None",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Some(_)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null,
    "insertText": "Some(${1:_})",
    "insertTextFormat": 2
  }, {
    "label": "Some(true)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Some(false)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 84:31
posCursor:[84:31] posNoWhite:[84:30] Found expr:[84:11->84:40]
Pexp_apply ...[84:11->84:24] (...[84:25->84:39])
Completable: Cexpression CArgument Value[fnTakingArray]($0)->array
[{
    "label": "None",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Some(_)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null,
    "insertText": "Some(${1:_})",
    "insertTextFormat": 2
  }, {
    "label": "Some(true)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "Some(false)",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 89:38
posCursor:[89:38] posNoWhite:[89:37] Found expr:[89:11->89:41]
Pexp_apply ...[89:11->89:25] (...[89:26->89:40])
Completable: Cexpression CArgument Value[fnTakingRecord]($0)=so
[{
    "label": "someBoolVar",
    "kind": 12,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 96:43
posCursor:[96:43] posNoWhite:[96:42] Found expr:[96:11->96:46]
Pexp_apply ...[96:11->96:30] (...[96:31->96:46])
Completable: Cexpression CArgument Value[fnTakingOtherRecord]($0)->recordField(otherField)
[{
    "label": "\"\"",
    "kind": 12,
    "tags": [],
    "detail": "string",
    "documentation": null,
    "sortText": "A",
    "insertText": "\"$0\"",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 108:57
posCursor:[108:57] posNoWhite:[108:56] Found expr:[108:11->108:60]
Pexp_apply ...[108:11->108:42] (...[108:43->108:60])
Completable: Cexpression CArgument Value[fnTakingRecordWithOptionalField]($0)->recordField(someOptField)
[{
    "label": "true",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "false",
    "kind": 4,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 116:53
posCursor:[116:53] posNoWhite:[116:52] Found expr:[116:11->116:56]
Pexp_apply ...[116:11->116:39] (...[116:40->116:56])
Completable: Cexpression CArgument Value[fnTakingRecordWithOptVariant]($0)->recordField(someVariant)
[{
    "label": "None",
    "kind": 4,
    "tags": [],
    "detail": "type someVariant = One | Two | Three(int, string)",
    "documentation": null
  }, {
    "label": "Some(_)",
    "kind": 4,
    "tags": [],
    "detail": "type someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "Some(${1:_})",
    "insertTextFormat": 2
  }, {
    "label": "Some(One)",
    "kind": 4,
    "tags": [],
    "detail": "One\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "Some(One)",
    "insertTextFormat": 2
  }, {
    "label": "Some(Two)",
    "kind": 4,
    "tags": [],
    "detail": "Two\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "Some(Two)",
    "insertTextFormat": 2
  }, {
    "label": "Some(Three(_, _))",
    "kind": 4,
    "tags": [],
    "detail": "Three(int, string)\n\ntype someVariant = One | Two | Three(int, string)",
    "documentation": null,
    "insertText": "Some(Three(${1:_}, ${2:_}))",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 126:49
posCursor:[126:49] posNoWhite:[126:48] Found expr:[126:11->126:51]
Pexp_apply ...[126:11->126:31] (...[126:32->126:50])
Completable: Cexpression CArgument Value[fnTakingInlineRecord]($0)->variantPayload::WithInlineRecord($0)
[{
    "label": "{}",
    "kind": 4,
    "tags": [],
    "detail": "Inline record",
    "documentation": null,
    "sortText": "A",
    "insertText": "{$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 129:50
posCursor:[129:50] posNoWhite:[129:49] Found expr:[129:11->129:53]
Pexp_apply ...[129:11->129:31] (...[129:32->129:52])
Completable: Cexpression CArgument Value[fnTakingInlineRecord]($0)->variantPayload::WithInlineRecord($0), recordBody
[{
    "label": "someBoolField",
    "kind": 4,
    "tags": [],
    "detail": "Inline record",
    "documentation": null
  }, {
    "label": "otherField",
    "kind": 4,
    "tags": [],
    "detail": "Inline record",
    "documentation": null
  }, {
    "label": "nestedRecord",
    "kind": 4,
    "tags": [],
    "detail": "Inline record",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 132:51
posCursor:[132:51] posNoWhite:[132:50] Found expr:[132:11->132:54]
Pexp_apply ...[132:11->132:31] (...[132:32->132:53])
Completable: Cexpression CArgument Value[fnTakingInlineRecord]($0)=s->variantPayload::WithInlineRecord($0), recordBody
[{
    "label": "someBoolField",
    "kind": 4,
    "tags": [],
    "detail": "Inline record",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 135:63
posCursor:[135:63] posNoWhite:[135:62] Found expr:[135:11->135:67]
Pexp_apply ...[135:11->135:31] (...[135:32->135:66])
Completable: Cexpression CArgument Value[fnTakingInlineRecord]($0)->variantPayload::WithInlineRecord($0), recordField(nestedRecord)
[{
    "label": "{}",
    "kind": 12,
    "tags": [],
    "detail": "otherRecord",
    "documentation": null,
    "sortText": "A",
    "insertText": "{$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 138:65
posCursor:[138:65] posNoWhite:[138:64] Found expr:[138:11->138:70]
Pexp_apply ...[138:11->138:31] (...[138:32->138:69])
Completable: Cexpression CArgument Value[fnTakingInlineRecord]($0)->variantPayload::WithInlineRecord($0), recordField(nestedRecord), recordBody
[{
    "label": "someField",
    "kind": 5,
    "tags": [],
    "detail": "someField: int\n\notherRecord",
    "documentation": null
  }, {
    "label": "otherField",
    "kind": 5,
    "tags": [],
    "detail": "otherField: string\n\notherRecord",
    "documentation": null
  }]

Complete src/CompletionExpressions.res 159:20
posCursor:[159:20] posNoWhite:[159:19] Found expr:[159:3->159:21]
Pexp_apply ...[159:3->159:19] (...[159:20->159:21])
Completable: Cexpression CArgument Value[fnTakingCallback]($0)
[{
    "label": "() => {}",
    "kind": 12,
    "tags": [],
    "detail": "unit => unit",
    "documentation": null,
    "sortText": "A",
    "insertText": "() => {$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 162:21
posCursor:[162:21] posNoWhite:[162:20] Found expr:[162:3->162:22]
Pexp_apply ...[162:3->162:19] (...[162:20->162:21])
Completable: Cexpression CArgument Value[fnTakingCallback]($0)=a
[]

Complete src/CompletionExpressions.res 165:22
posCursor:[165:22] posNoWhite:[165:21] Found expr:[165:3->165:24]
Pexp_apply ...[165:3->165:19] (...[165:20->165:21])
Completable: Cexpression CArgument Value[fnTakingCallback]($1)
[{
    "label": "v => {}",
    "kind": 12,
    "tags": [],
    "detail": "bool => unit",
    "documentation": null,
    "sortText": "A",
    "insertText": "${1:v} => {$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 168:25
posCursor:[168:25] posNoWhite:[168:24] Found expr:[168:3->168:27]
Pexp_apply ...[168:3->168:19] (...[168:20->168:21], ...[168:23->168:24])
Completable: Cexpression CArgument Value[fnTakingCallback]($2)
[{
    "label": "event => {}",
    "kind": 12,
    "tags": [],
    "detail": "ReactEvent.Mouse.t => unit",
    "documentation": null,
    "sortText": "A",
    "insertText": "${1:event} => {$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 171:29
posCursor:[171:29] posNoWhite:[171:27] Found expr:[171:3->171:30]
Pexp_apply ...[171:3->171:19] (...[171:20->171:21], ...[171:23->171:24], ...[171:26->171:27])
Completable: Cexpression CArgument Value[fnTakingCallback]($3)
[{
    "label": "(~on, ~off=?, v1) => {}",
    "kind": 12,
    "tags": [],
    "detail": "(~on: bool, ~off: bool=?, variant) => int",
    "documentation": null,
    "sortText": "A",
    "insertText": "(~on, ~off=?, ${1:v1}) => {$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 174:32
posCursor:[174:32] posNoWhite:[174:30] Found expr:[174:3->174:33]
Pexp_apply ...[174:3->174:19] (...[174:20->174:21], ...[174:23->174:24], ...[174:26->174:27], ...[174:29->174:30])
Completable: Cexpression CArgument Value[fnTakingCallback]($4)
[{
    "label": "(v1, v2, v3) => {}",
    "kind": 12,
    "tags": [],
    "detail": "(bool, option<bool>, bool) => unit",
    "documentation": null,
    "sortText": "A",
    "insertText": "(${1:v1}, ${2:v2}, ${3:v3}) => {$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 177:34
posCursor:[177:34] posNoWhite:[177:33] Found expr:[177:3->177:36]
Pexp_apply ...[177:3->177:19] (...[177:20->177:21], ...[177:23->177:24], ...[177:26->177:27], ...[177:29->177:30], ...[177:32->177:33])
Completable: Cexpression CArgument Value[fnTakingCallback]($5)
[{
    "label": "(~on=?, ~off=?, ()) => {}",
    "kind": 12,
    "tags": [],
    "detail": "(~on: bool=?, ~off: bool=?, unit) => int",
    "documentation": null,
    "sortText": "A",
    "insertText": "(~on=?, ~off=?, ()) => {$0}",
    "insertTextFormat": 2
  }]

Complete src/CompletionExpressions.res 185:10
posCursor:[185:10] posNoWhite:[185:9] Found expr:[181:2->185:11]
posCursor:[185:10] posNoWhite:[185:9] Found expr:[182:2->185:11]
posCursor:[185:10] posNoWhite:[185:9] Found expr:[183:2->185:11]
posCursor:[185:10] posNoWhite:[185:9] Found expr:[184:2->185:11]
posCursor:[185:10] posNoWhite:[185:9] Found expr:[185:2->185:11]
Pexp_apply ...[185:2->185:8] (...[185:9->185:10])
Completable: Cexpression CArgument Value[Js, log]($0)=s
[{
    "label": "second2",
    "kind": 12,
    "tags": [],
    "detail": "int",
    "documentation": null
  }, {
    "label": "second",
    "kind": 12,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "someBoolVar",
    "kind": 12,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }, {
    "label": "s",
    "kind": 12,
    "tags": [],
    "detail": "bool",
    "documentation": null
  }]

