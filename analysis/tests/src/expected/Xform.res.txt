Xform src/Xform.res 6:5
Hit: Replace with switch
{"start": {"line": 6, "character": 0}, "end": {"line": 11, "character": 1}}
newText:
<--here
switch kind {
| First =>
  // ^xfm
  ret("First")
| _ => ret("Not First")
}

Xform src/Xform.res 13:15
Hit: Replace with switch
{"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 79}}
newText:
<--here
switch kind {
| #kind("First", {name: "abc", age: 3}) => ret("First")
| _ => ret("Not First")
}

Xform src/Xform.res 16:5
Hit: Add type annotation
{"start": {"line": 16, "character": 8}, "end": {"line": 16, "character": 8}}
newText:
        <--here
        : string

Xform src/Xform.res 19:5

Xform src/Xform.res 26:10
Hit: Add type annotation
{"start": {"line": 26, "character": 10}, "end": {"line": 26, "character": 11}}
newText:
          <--here
          (x: option<T.r>)

Xform src/Xform.res 30:9
Hit: Add braces to function
{"start": {"line": 26, "character": 0}, "end": {"line": 32, "character": 3}}
newText:
<--here
let foo = x => {
  //      ^xfm
  switch x {
  | None => 33
  | Some(q) => q.T.a + 1
  //     ^xfm
  }
}

Xform src/Xform.res 34:21
Hit: Add type annotation
{"start": {"line": 34, "character": 24}, "end": {"line": 34, "character": 24}}
newText:
                        <--here
                        : int

Xform src/Xform.res 38:5

Xform src/Xform.res 41:9
Hit: Add type annotation
{"start": {"line": 41, "character": 11}, "end": {"line": 41, "character": 11}}
newText:
           <--here
           : int

Xform src/Xform.res 48:21
Hit: Add braces to function
{"start": {"line": 48, "character": 0}, "end": {"line": 48, "character": 25}}
newText:
<--here
let noBraces = () => {
  name
}

Xform src/Xform.res 52:34
Hit: Add braces to function
{"start": {"line": 51, "character": 0}, "end": {"line": 54, "character": 1}}
newText:
<--here
let nested = () => {
  let _noBraces = (_x, _y, _z) => {
    "someNewFunc"
  }
  //                              ^xfm
}

Xform src/Xform.res 62:6
Hit: Add braces to function
{"start": {"line": 58, "character": 4}, "end": {"line": 62, "character": 7}}
newText:
    <--here
    let foo = (_x, y, _z) => {
      switch y {
      | #some => 3
      | #stuff => 4
      }
    }

Xform src/Xform.res 68:2
Hit: Move type definition into its own module
{"start": {"line": 68, "character": 0}, "end": {"line": 68, "character": 36}}
newText:
<--here
module ReadState = {
  type t = New | Unread | Read
}
{"start": {"line": 71, "character": 16}, "end": {"line": 71, "character": 25}}
newText:
                <--here
                ReadState.t

Xform src/Xform.res 76:2
Hit: Move type definition into its own module
{"start": {"line": 73, "character": 0}, "end": {"line": 76, "character": 25}}
newText:
<--here
module Account = {
  type t =
    | None
    | Instagram(string)
    | Facebook(string, int)
}

Xform src/Xform.res 82:2

Xform src/Xform.res 88:2
Hit: Move type definition into its own module
{"start": {"line": 85, "character": 0}, "end": {"line": 88, "character": 25}}
newText:
<--here
module User = {
  type t = {
    name: string,
    age: int,
  }
  and response = Yes | No
}
{"start": {"line": 98, "character": 21}, "end": {"line": 98, "character": 25}}
newText:
                     <--here
                     User.name
{"start": {"line": 98, "character": 45}, "end": {"line": 98, "character": 49}}
newText:
                                             <--here
                                             User.name
{"start": {"line": 100, "character": 20}, "end": {"line": 100, "character": 23}}
newText:
                    <--here
                    User.Yes

Xform src/Xform.res 91:2
Hit: Move type definition into its own module
{"start": {"line": 91, "character": 0}, "end": {"line": 91, "character": 25}}
newText:
<--here
module MyType = {
  type t = This | That
}
{"start": {"line": 94, "character": 15}, "end": {"line": 94, "character": 21}}
newText:
               <--here
               MyType.t
{"start": {"line": 96, "character": 20}, "end": {"line": 96, "character": 24}}
newText:
                    <--here
                    MyType.This

