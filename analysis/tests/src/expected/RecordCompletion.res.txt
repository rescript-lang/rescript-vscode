Complete src/RecordCompletion.res 8:9
posCursor:[8:9] posNoWhite:[8:8] Found expr:[8:3->8:9]
Completable: Cpath Value[t].n->m
Package opens Pervasives.JsxModules.place holder
ContextPath Value[t].n->m
ContextPath Value[t].n
ContextPath Value[t]
Path t
CPPipe env:RecordCompletion
Path Js.Array2.m
[{
    "label": "Js.Array2.mapi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The function acceps two arguments: an item from the array and its\nindex number. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n```res example\n// multiply each item in array by its position\nlet product = (item, index) => item * index\nJs.Array2.mapi([10, 11, 12], product) == [0, 11, 24]\n```\n"}
  }, {
    "label": "Js.Array2.map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n```res example\nJs.Array2.map([12, 4, 8], x => x * x) == [144, 16, 64]\nJs.Array2.map([\"animal\", \"vegetable\", \"mineral\"], Js.String.length) == [6, 9, 7]\n```\n"}
  }]

Complete src/RecordCompletion.res 11:13
posCursor:[11:13] posNoWhite:[11:12] Found expr:[11:3->11:13]
Completable: Cpath Value[t2].n2.n->m
Package opens Pervasives.JsxModules.place holder
ContextPath Value[t2].n2.n->m
ContextPath Value[t2].n2.n
ContextPath Value[t2].n2
ContextPath Value[t2]
Path t2
CPPipe env:RecordCompletion
Path Js.Array2.m
[{
    "label": "Js.Array2.mapi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The function acceps two arguments: an item from the array and its\nindex number. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n```res example\n// multiply each item in array by its position\nlet product = (item, index) => item * index\nJs.Array2.mapi([10, 11, 12], product) == [0, 11, 24]\n```\n"}
  }, {
    "label": "Js.Array2.map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nApplies the function (the second argument) to each item in the array, returning\na new array. The result array does not have to have elements of the same type\nas the input array. See\n[`Array.map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\non MDN.\n\n```res example\nJs.Array2.map([12, 4, 8], x => x * x) == [144, 16, 64]\nJs.Array2.map([\"animal\", \"vegetable\", \"mineral\"], Js.String.length) == [6, 9, 7]\n```\n"}
  }]

Complete src/RecordCompletion.res 19:7
posCursor:[19:7] posNoWhite:[19:6] Found expr:[19:3->19:7]
Pexp_field [19:3->19:4] R.:[19:5->19:7]
Completable: Cpath Module[R].""
Package opens Pervasives.JsxModules.place holder
ContextPath Module[R].""
Path R.
[{
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "name: string\n\ntype t = {name: string}",
    "documentation": null
  }]

Complete src/RecordCompletion.res 22:7
posCursor:[22:7] posNoWhite:[22:6] Found expr:[22:3->22:10]
Pexp_field [22:3->22:4] R.xx:[22:5->22:10]
Completable: Cpath Module[R].""
Package opens Pervasives.JsxModules.place holder
ContextPath Module[R].""
Path R.
[{
    "label": "name",
    "kind": 5,
    "tags": [],
    "detail": "name: string\n\ntype t = {name: string}",
    "documentation": null
  }]

