module A = {
  module B1 = {
    type b1 = B1
    let xx = B1
  }
  module B2 = {
    let yy = 20
  }
  type t = {v: B1.b1}
  let x = {v: B1.B1}
}

// let _ = A.B1.xx->
//                  ^com
// b1 seen from B1 is A.B1.b1

// let _ = A.x.v->
//                ^com
// B1.b1 seen from A  is A.B1.b1

module C = {
  type t = C
}

module D = {
  module C2 = {
    type t2 = C2
  }

  type d = {v: C.t, v2: C2.t2}
  let d = {v: C.C, v2: C2.C2}
}

module E = {
  type e = {v: D.d}
  let e = {v: D.d}
}

// let _ = E.e.v.v->
//                  ^com
// C.t seen from D is C.t

// let _ = E.e.v.v2->
//                   ^com
// C2.t2 seen from D is D.C2.t2
Complete src/CompletionPipeSubmodules.res 12:20
posCursor:[12:20] posNoWhite:[12:19] Found expr:[12:11->20:8]
Completable: Cpath Value[A, B1, xx]->
Package opens Pervasives.JsxModules.place holder
Resolved opens 1 pervasives
ContextPath Value[A, B1, xx]->
ContextPath Value[A, B1, xx]
Path A.B1.xx
CPPipe env:CompletionPipeSubmodules envFromCompletionItem:CompletionPipeSubmodules.A.B1
CPPipe type path:b1
CPPipe pathFromEnv:A.B1 found:true
Path A.B1.
[{
    "label": "A.B1.xx",
    "kind": 12,
    "tags": [],
    "detail": "b1",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype b1 = B1\n```"}
  }, {
    "label": "A.B1.B1",
    "kind": 4,
    "tags": [],
    "detail": "B1",
    "documentation": {"kind": "markdown", "value": "```rescript\nB1\n```\n\n```rescript\ntype b1 = B1\n```"}
  }]

Complete src/CompletionPipeSubmodules.res 16:18
posCursor:[16:18] posNoWhite:[16:17] Found expr:[16:11->20:8]
Completable: Cpath Value[A, x].v->
Package opens Pervasives.JsxModules.place holder
Resolved opens 1 pervasives
ContextPath Value[A, x].v->
ContextPath Value[A, x].v
ContextPath Value[A, x]
Path A.x
CPPipe env:CompletionPipeSubmodules envFromCompletionItem:CompletionPipeSubmodules.A
CPPipe type path:B1.b1
CPPipe pathFromEnv:A.B1 found:true
Path A.B1.
[{
    "label": "A.B1.xx",
    "kind": 12,
    "tags": [],
    "detail": "b1",
    "documentation": {"kind": "markdown", "value": "```rescript\ntype b1 = B1\n```"}
  }, {
    "label": "A.B1.B1",
    "kind": 4,
    "tags": [],
    "detail": "B1",
    "documentation": {"kind": "markdown", "value": "```rescript\nB1\n```\n\n```rescript\ntype b1 = B1\n```"}
  }]

Complete src/CompletionPipeSubmodules.res 38:20
posCursor:[38:20] posNoWhite:[38:19] Found expr:[38:11->0:-1]
Completable: Cpath Value[E, e].v.v->
Package opens Pervasives.JsxModules.place holder
Resolved opens 1 pervasives
ContextPath Value[E, e].v.v->
ContextPath Value[E, e].v.v
ContextPath Value[E, e].v
ContextPath Value[E, e]
Path E.e
CPPipe env:CompletionPipeSubmodules envFromCompletionItem:CompletionPipeSubmodules.D
CPPipe type path:C.t
CPPipe pathFromEnv:C found:false
Path C.
[{
    "label": "C.C",
    "kind": 4,
    "tags": [],
    "detail": "C",
    "documentation": {"kind": "markdown", "value": "```rescript\nC\n```\n\n```rescript\ntype t = C\n```"}
  }]

Complete src/CompletionPipeSubmodules.res 42:21
posCursor:[42:21] posNoWhite:[42:20] Found expr:[42:11->0:-1]
Completable: Cpath Value[E, e].v.v2->
Package opens Pervasives.JsxModules.place holder
Resolved opens 1 pervasives
ContextPath Value[E, e].v.v2->
ContextPath Value[E, e].v.v2
ContextPath Value[E, e].v
ContextPath Value[E, e]
Path E.e
CPPipe env:CompletionPipeSubmodules envFromCompletionItem:CompletionPipeSubmodules.D
CPPipe type path:C2.t2
CPPipe pathFromEnv:D.C2 found:true
Path D.C2.
[{
    "label": "D.C2.C2",
    "kind": 4,
    "tags": [],
    "detail": "C2",
    "documentation": {"kind": "markdown", "value": "```rescript\nC2\n```\n\n```rescript\ntype t2 = C2\n```"}
  }]

