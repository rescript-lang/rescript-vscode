type variant = Foo | Bar

type record = {item: string}
//       ^typ

let x = Foo
//  ^typ

let y = {item: "foo"}
//  ^typ

type obj = {"foo": string}

let obj: obj = {"foo": "bar"}
//  ^typ

let f = r => r.item
//           ^typ

let g = v =>
  switch v {
  //     ^typ
  | Foo => "Foo"
  | Bar => "Bar"
  }
TypeDefinition src/TypeDefinition.res 2:9
{"uri": "TypeDefinition.res", "range": {"start": {"line": 2, "character": 5}, "end": {"line": 2, "character": 11}}}

TypeDefinition src/TypeDefinition.res 5:4
{"uri": "TypeDefinition.res", "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 24}}}

TypeDefinition src/TypeDefinition.res 8:4
{"uri": "TypeDefinition.res", "range": {"start": {"line": 2, "character": 0}, "end": {"line": 2, "character": 28}}}

TypeDefinition src/TypeDefinition.res 13:4
{"uri": "TypeDefinition.res", "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 26}}}

TypeDefinition src/TypeDefinition.res 16:13
{"uri": "TypeDefinition.res", "range": {"start": {"line": 2, "character": 0}, "end": {"line": 2, "character": 28}}}

TypeDefinition src/TypeDefinition.res 20:9
{"uri": "TypeDefinition.res", "range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 24}}}

