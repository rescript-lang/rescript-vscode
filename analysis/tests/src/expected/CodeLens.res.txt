let add = (x, y) => x + y

let foo = (~age, ~name) => name ++ string_of_int(age)

let ff = (~opt1=0, ~a, ~b, (), ~opt2=0, (), ~c) => a + b + c + opt1 + opt2

let compFF = Completion.ff

@react.component
let make = (~name) => React.string(name)
//^cle
Code Lens src/CodeLens.res
[{
        "range": {"start": {"line": 9, "character": 4}, "end": {"line": 9, "character": 8}},
        "command": {"title": "{\"name\": string} => React.element", "command": ""}
    }, {
        "range": {"start": {"line": 4, "character": 4}, "end": {"line": 4, "character": 6}},
        "command": {"title": "(~opt1: int=?, ~a: int, ~b: int, unit, ~opt2: int=?, unit, ~c: int) => int", "command": ""}
    }, {
        "range": {"start": {"line": 2, "character": 4}, "end": {"line": 2, "character": 7}},
        "command": {"title": "(~age: int, ~name: string) => string", "command": ""}
    }, {
        "range": {"start": {"line": 0, "character": 4}, "end": {"line": 0, "character": 7}},
        "command": {"title": "(int, int) => int", "command": ""}
    }]

