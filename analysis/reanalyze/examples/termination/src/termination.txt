  Scanning TestCyberTruck.cmt Source:TestCyberTruck.res

  Function Table
  1 justReturn: _

  Termination Analysis for justReturn

  Termination Analysis
  File "TestCyberTruck.res", line 26, characters 21-29
  justReturn returns NoProgress with trace _

  Function Table
  1 alwaysLoop: alwaysLoop

  Termination Analysis for alwaysLoop

  Error Termination
  File "TestCyberTruck.res", line 29, characters 27-39
  Possible infinite loop when calling alwaysLoop
  CallStack:
    1 alwaysLoop (TestCyberTruck.res 29)

  Termination Analysis
  File "TestCyberTruck.res", line 29, characters 21-39
  alwaysLoop returns NoProgress with trace alwaysLoop:NoProgress

  Function Table
  1 alwaysProgress: +progress; alwaysProgress

  Termination Analysis for alwaysProgress

  Termination Analysis
  File "TestCyberTruck.res", line 32, characters 25-82
  alwaysProgress returns Progress with trace progress:Progress; alwaysProgress:Progress

  Function Table
  1 alwaysProgressWrongOrder: alwaysProgressWrongOrder; +progress

  Termination Analysis for alwaysProgressWrongOrder

  Error Termination
  File "TestCyberTruck.res", line 40, characters 2-28
  Possible infinite loop when calling alwaysProgressWrongOrder
  CallStack:
    1 alwaysProgressWrongOrder (TestCyberTruck.res 39)

  Termination Analysis
  File "TestCyberTruck.res", line 39, characters 35-112
  alwaysProgressWrongOrder returns Progress with trace alwaysProgressWrongOrder:NoProgress; progress:Progress

  Error Hygiene
  File "TestCyberTruck.res", line 47, characters 14-24
  doNotAlias can only be called directly, or passed as labeled argument

  Function Table
  1 doNotAlias: _

  Termination Analysis for doNotAlias

  Termination Analysis
  File "TestCyberTruck.res", line 45, characters 21-105
  doNotAlias returns NoProgress with trace _

  Function Table
  1 progressOnBothBranches: [+progress || +progress2]; progressOnBothBranches

  Termination Analysis for progressOnBothBranches

  Termination Analysis
  File "TestCyberTruck.res", line 53, characters 25-120
  progressOnBothBranches returns Progress with trace [progress:Progress || progress2:Progress]; progressOnBothBranches:Progress

  Function Table
  1 progressOnOneBranch: [+progress || _]; progressOnOneBranch

  Termination Analysis for progressOnOneBranch

  Error Termination
  File "TestCyberTruck.res", line 68, characters 2-24
  Possible infinite loop when calling progressOnOneBranch
  CallStack:
    1 progressOnOneBranch (TestCyberTruck.res 64)

  Termination Analysis
  File "TestCyberTruck.res", line 64, characters 22-87
  progressOnOneBranch returns NoProgress with trace [progress:Progress || _]; progressOnOneBranch:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 79, characters 71-93
  callParseFunction is parametric ~parseFunction=testParametricFunction

  Function Table
  1 callParseFunction<parseFunction>: parseFunction
  2 testParametricFunction: [+progress || _]; testParametricFunction2
  3 testParametricFunction2: callParseFunction<parseFunction:testParametricFunction>

  Termination Analysis for testParametricFunction

  Termination Analysis
  File "TestCyberTruck.res", line 77, characters 2-28
  Cache miss for testParametricFunction2

  Termination Analysis
  File "TestCyberTruck.res", line 79, characters 35-94
  Cache miss for callParseFunction<parseFunction:testParametricFunction>

  Error Termination
  File "TestCyberTruck.res", line 80, characters 47-63
  Possible infinite loop when calling parseFunction which is testParametricFunction
  CallStack:
    3 callParseFunction<parseFunction:testParametricFunction> (TestCyberTruck.res 79)
    2 testParametricFunction2 (TestCyberTruck.res 77)
    1 testParametricFunction (TestCyberTruck.res 73)

  Termination Analysis
  File "TestCyberTruck.res", line 79, characters 35-94
  callParseFunction<parseFunction:testParametricFunction> returns NoProgress with trace testParametricFunction:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 77, characters 2-28
  testParametricFunction2 returns NoProgress with trace callParseFunction<parseFunction:testParametricFunction>:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 73, characters 25-94
  testParametricFunction returns NoProgress with trace [progress:Progress || _]; testParametricFunction2:NoProgress

  Function Table
  1 doNothing: _
  2 testCacheHit: [doNothing; doNothing; +Progress.Nested.f || _]; testCacheHit

  Termination Analysis for testCacheHit

  Termination Analysis
  File "TestCyberTruck.res", line 85, characters 4-16
  Cache miss for doNothing

  Termination Analysis
  File "TestCyberTruck.res", line 85, characters 4-16
  doNothing returns NoProgress with trace _

  Termination Analysis
  File "TestCyberTruck.res", line 86, characters 4-16
  Cache hit for doNothing

  Error Termination
  File "TestCyberTruck.res", line 89, characters 2-17
  Possible infinite loop when calling testCacheHit
  CallStack:
    1 testCacheHit (TestCyberTruck.res 83)

  Termination Analysis
  File "TestCyberTruck.res", line 83, characters 23-162
  testCacheHit returns NoProgress with trace [doNothing:NoProgress; doNothing:NoProgress; Progress.Nested.f:Progress || _]; testCacheHit:NoProgress

  Function Table
  1 evalOrderIsNotLeftToRight: {+progress, evalOrderIsNotLeftToRight}; _

  Termination Analysis for evalOrderIsNotLeftToRight

  Error Termination
  File "TestCyberTruck.res", line 97, characters 30-58
  Possible infinite loop when calling evalOrderIsNotLeftToRight
  CallStack:
    1 evalOrderIsNotLeftToRight (TestCyberTruck.res 95)

  Termination Analysis
  File "TestCyberTruck.res", line 95, characters 28-135
  evalOrderIsNotLeftToRight returns Progress with trace progress:Progress; evalOrderIsNotLeftToRight:NoProgress

  Function Table
  1 evalOrderIsNotRightToLeft: {evalOrderIsNotRightToLeft, +progress}; _

  Termination Analysis for evalOrderIsNotRightToLeft

  Error Termination
  File "TestCyberTruck.res", line 104, characters 18-46
  Possible infinite loop when calling evalOrderIsNotRightToLeft
  CallStack:
    1 evalOrderIsNotRightToLeft (TestCyberTruck.res 102)

  Termination Analysis
  File "TestCyberTruck.res", line 102, characters 28-135
  evalOrderIsNotRightToLeft returns Progress with trace evalOrderIsNotRightToLeft:NoProgress; progress:Progress

  Function Table
  1 butFirstArgumentIsAlwaysEvaluated: +progress; butFirstArgumentIsAlwaysEvaluated

  Termination Analysis for butFirstArgumentIsAlwaysEvaluated

  Termination Analysis
  File "TestCyberTruck.res", line 109, characters 36-156
  butFirstArgumentIsAlwaysEvaluated returns Progress with trace progress:Progress; butFirstArgumentIsAlwaysEvaluated:Progress

  Function Table
  1 butSecondArgumentIsAlwaysEvaluated: +progress; butSecondArgumentIsAlwaysEvaluated

  Termination Analysis for butSecondArgumentIsAlwaysEvaluated

  Termination Analysis
  File "TestCyberTruck.res", line 117, characters 37-158
  butSecondArgumentIsAlwaysEvaluated returns Progress with trace progress:Progress; butSecondArgumentIsAlwaysEvaluated:Progress

  Termination Analysis
  File "TestCyberTruck.res", line 198, characters 44-52
  Extend Function Table with parseInt (TestCyberTruck.res 186) as it calls a progress function

  Termination Analysis
  File "TestCyberTruck.res", line 174, characters 16-212
  Extend Function Table with parseList as parametric ~f=parseInt

  Termination Analysis
  File "TestCyberTruck.res", line 224, characters 10-14
  Adding recursive definition parseListIntTailRecursive$loop

  Termination Analysis
  File "TestCyberTruck.res", line 175, characters 10-14
  Adding recursive definition parseList$loop

  Function Table
  1 parseExpression: [_ || _]; [+Parser.next; parseExpression; parseExpression; _ || parseInt]
  2 parseInt: [_ || _]; +Parser.next; _
  3 parseList<f>: parseList$loop<f:f>
  4 parseList$loop<f>: [_ || f; parseList$loop<f:f>; _]
  5 parseListExpression: parseList<f:parseExpression>
  6 parseListExpression2: parseExpression; parseList<f:parseExpression>
  7 parseListInt: parseList<f:parseInt>
  8 parseListIntTailRecursive: parseListIntTailRecursive$loop
  9 parseListIntTailRecursive$loop: [_ || parseInt; parseListIntTailRecursive$loop]
  10 parseListListInt: parseList<f:parseListInt>

  Termination Analysis for parseListInt

  Termination Analysis
  File "TestCyberTruck.res", line 198, characters 28-53
  Cache miss for parseList<f:parseInt>

  Termination Analysis
  File "TestCyberTruck.res", line 183, characters 2-9
  Cache miss for parseList$loop<f:parseInt>

  Termination Analysis
  File "TestCyberTruck.res", line 179, characters 17-21
  Cache miss for parseInt

  Termination Analysis
  File "TestCyberTruck.res", line 179, characters 17-21
  parseInt returns Progress with trace [_ || _]; Parser.next:Progress

  Termination Analysis
  File "TestCyberTruck.res", line 183, characters 2-9
  parseList$loop<f:parseInt> returns NoProgress with trace [_ || parseInt:Progress; parseList$loop<f:parseInt>:Progress]

  Termination Analysis
  File "TestCyberTruck.res", line 198, characters 28-53
  parseList<f:parseInt> returns NoProgress with trace parseList$loop<f:parseInt>:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 198, characters 23-53
  parseListInt returns NoProgress with trace parseList<f:parseInt>:NoProgress

  Termination Analysis for parseListListInt

  Termination Analysis
  File "TestCyberTruck.res", line 201, characters 28-57
  Cache miss for parseList<f:parseListInt>

  Termination Analysis
  File "TestCyberTruck.res", line 183, characters 2-9
  Cache miss for parseList$loop<f:parseListInt>

  Termination Analysis
  File "TestCyberTruck.res", line 179, characters 17-21
  Cache hit for parseListInt

  Error Termination
  File "TestCyberTruck.res", line 180, characters 14-21
  Possible infinite loop when calling parseList$loop<f:f> which is parseList$loop<f:parseListInt>
  CallStack:
    3 parseList$loop<f:parseListInt> (TestCyberTruck.res 183)
    2 parseList<f:parseListInt> (TestCyberTruck.res 201)
    1 parseListListInt (TestCyberTruck.res 201)

  Termination Analysis
  File "TestCyberTruck.res", line 183, characters 2-9
  parseList$loop<f:parseListInt> returns NoProgress with trace [_ || parseListInt:NoProgress; parseList$loop<f:parseListInt>:NoProgress]

  Termination Analysis
  File "TestCyberTruck.res", line 201, characters 28-57
  parseList<f:parseListInt> returns NoProgress with trace parseList$loop<f:parseListInt>:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 201, characters 23-57
  parseListListInt returns NoProgress with trace parseList<f:parseListInt>:NoProgress

  Termination Analysis for parseExpression

  Termination Analysis
  File "TestCyberTruck.res", line 213, characters 18-29
  Cache hit for parseInt

  Termination Analysis
  File "TestCyberTruck.res", line 204, characters 22-273
  parseExpression returns Progress with trace [_ || _]; [Parser.next:Progress; parseExpression:Progress; parseExpression:Progress || parseInt:Progress]

  Termination Analysis for parseListExpression

  Termination Analysis
  File "TestCyberTruck.res", line 217, characters 31-63
  Cache miss for parseList<f:parseExpression>

  Termination Analysis
  File "TestCyberTruck.res", line 183, characters 2-9
  Cache miss for parseList$loop<f:parseExpression>

  Termination Analysis
  File "TestCyberTruck.res", line 179, characters 17-21
  Cache hit for parseExpression

  Termination Analysis
  File "TestCyberTruck.res", line 183, characters 2-9
  parseList$loop<f:parseExpression> returns NoProgress with trace [_ || parseExpression:Progress; parseList$loop<f:parseExpression>:Progress]

  Termination Analysis
  File "TestCyberTruck.res", line 217, characters 31-63
  parseList<f:parseExpression> returns NoProgress with trace parseList$loop<f:parseExpression>:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 217, characters 26-63
  parseListExpression returns NoProgress with trace parseList<f:parseExpression>:NoProgress

  Termination Analysis for parseListExpression2

  Termination Analysis
  File "TestCyberTruck.res", line 220, characters 48-69
  Cache hit for parseExpression

  Termination Analysis
  File "TestCyberTruck.res", line 220, characters 32-70
  Cache hit for parseList<f:parseExpression>

  Termination Analysis
  File "TestCyberTruck.res", line 220, characters 27-70
  parseListExpression2 returns Progress with trace parseExpression:Progress; parseList<f:parseExpression>:NoProgress

  Termination Analysis for parseListIntTailRecursive

  Termination Analysis
  File "TestCyberTruck.res", line 230, characters 2-17
  Cache miss for parseListIntTailRecursive$loop

  Termination Analysis
  File "TestCyberTruck.res", line 228, characters 19-30
  Cache hit for parseInt

  Termination Analysis
  File "TestCyberTruck.res", line 230, characters 2-17
  parseListIntTailRecursive$loop returns NoProgress with trace [_ || parseInt:Progress; parseListIntTailRecursive$loop:Progress]

  Termination Analysis
  File "TestCyberTruck.res", line 223, characters 32-200
  parseListIntTailRecursive returns NoProgress with trace parseListIntTailRecursive$loop:NoProgress

  Function Table
  1 loopAfterProgress: loopAfterProgress
  2 testLoopAfterProgress: +progress; loopAfterProgress

  Termination Analysis for testLoopAfterProgress

  Termination Analysis
  File "TestCyberTruck.res", line 236, characters 2-21
  Cache miss for loopAfterProgress

  Error Termination
  File "TestCyberTruck.res", line 238, characters 30-49
  Possible infinite loop when calling loopAfterProgress
  CallStack:
    1 loopAfterProgress (TestCyberTruck.res 236)

  Termination Analysis
  File "TestCyberTruck.res", line 236, characters 2-21
  loopAfterProgress returns NoProgress with trace loopAfterProgress:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 234, characters 32-76
  testLoopAfterProgress returns Progress with trace progress:Progress; loopAfterProgress:NoProgress

  Function Table
  1 counterCompiled: +initState; [_ || counterCompiled; _]; _
  2 onClick1: [_ || counterCompiled]

  Termination Analysis for counterCompiled

  Termination Analysis
  File "TestCyberTruck.res", line 263, characters 28-195
  counterCompiled returns Progress with trace initState:Progress; [_ || counterCompiled:Progress]

  Function Table
  1 countRendersCompiled: [_ || countRendersCompiled; _]; _

  Termination Analysis for countRendersCompiled

  Error Termination
  File "TestCyberTruck.res", line 286, characters 31-61
  Possible infinite loop when calling countRendersCompiled
  CallStack:
    1 countRendersCompiled (TestCyberTruck.res 283)

  Termination Analysis
  File "TestCyberTruck.res", line 283, characters 33-246
  countRendersCompiled returns NoProgress with trace [_ || countRendersCompiled:NoProgress]

  Termination Analysis
  File "TestCyberTruck.res", line 318, characters 48-57
  Extend Function Table with parseIntO (TestCyberTruck.res 307) as it calls a progress function

  Termination Analysis
  File "TestCyberTruck.res", line 318, characters 31-41
  Extend Function Table with parseListO (TestCyberTruck.res 293) as it calls a progress function

  Termination Analysis
  File "TestCyberTruck.res", line 293, characters 19-299
  Extend Function Table with parseListO as parametric ~f=parseIntO

  Termination Analysis
  File "TestCyberTruck.res", line 294, characters 12-16
  Adding recursive definition parseListO$loop

  Function Table
  1 alwaysReturnNone: [+Parser.next; alwaysReturnNone || None]
  2 parseIntO: [+Parser.next; Some || None]
  3 parseIntOWrapper: parseIntO
  4 parseListIntO: parseListO<f:parseIntO>
  5 parseListO<f>: parseListO$loop<f:f>
  6 parseListO$loop<f>: [+Parser.next; _ || switch f {some: parseListO$loop<f:f>, none: _}]
  7 testAlwaysReturnNone: alwaysReturnNone
  8 thisMakesNoProgress: None; [_ || +Parser.next; Some]

  Termination Analysis for parseListIntO

  Termination Analysis
  File "TestCyberTruck.res", line 318, characters 31-58
  Cache miss for parseListO<f:parseIntO>

  Termination Analysis
  File "TestCyberTruck.res", line 304, characters 4-16
  Cache miss for parseListO$loop<f:parseIntO>

  Termination Analysis
  File "TestCyberTruck.res", line 299, characters 15-19
  Cache miss for parseIntO

  Termination Analysis
  File "TestCyberTruck.res", line 299, characters 15-19
  parseIntO returns {some: Progress, none: NoProgress} with trace [Parser.next:Progress; Some || None]

  Termination Analysis
  File "TestCyberTruck.res", line 304, characters 4-16
  parseListO$loop<f:parseIntO> returns NoProgress with trace [Parser.next:Progress || parseIntO:NoProgress; [parseListO$loop<f:parseIntO>:Progress || _]]

  Termination Analysis
  File "TestCyberTruck.res", line 318, characters 31-58
  parseListO<f:parseIntO> returns NoProgress with trace parseListO$loop<f:parseIntO>:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 318, characters 26-58
  parseListIntO returns NoProgress with trace parseListO<f:parseIntO>:NoProgress

  Termination Analysis for testAlwaysReturnNone

  Termination Analysis
  File "TestCyberTruck.res", line 329, characters 34-53
  Cache miss for alwaysReturnNone

  Termination Analysis
  File "TestCyberTruck.res", line 329, characters 34-53
  alwaysReturnNone returns {none: NoProgress} with trace [Parser.next:Progress; alwaysReturnNone:Progress || None]

  Termination Analysis
  File "TestCyberTruck.res", line 329, characters 29-53
  testAlwaysReturnNone returns {none: NoProgress} with trace alwaysReturnNone:NoProgress

  Termination Analysis for parseIntOWrapper

  Termination Analysis
  File "TestCyberTruck.res", line 332, characters 30-42
  Cache hit for parseIntO

  Termination Analysis
  File "TestCyberTruck.res", line 332, characters 25-42
  parseIntOWrapper returns {some: Progress, none: NoProgress} with trace parseIntO:NoProgress

  Termination Analysis for thisMakesNoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 335, characters 28-157
  thisMakesNoProgress returns NoProgress with trace None; [_ || Parser.next:Progress; Some]

  Termination Analysis
  File "TestCyberTruck.res", line 365, characters 15-16
  gParam is parametric ~g=g

  Function Table
  1 f: [g; _ || _ || +Parser.next; f]
  2 g: +Parser.next; gParam<g:g>
  3 gParam<g>: [g; _ || f]

  Termination Analysis for f

  Termination Analysis
  File "TestCyberTruck.res", line 350, characters 16-20
  Cache miss for g

  Termination Analysis
  File "TestCyberTruck.res", line 365, characters 4-17
  Cache miss for gParam<g:g>

  Termination Analysis
  File "TestCyberTruck.res", line 365, characters 4-17
  gParam<g:g> returns Progress with trace [g:Progress || f:Progress]

  Termination Analysis
  File "TestCyberTruck.res", line 350, characters 16-20
  g returns Progress with trace Parser.next:Progress; gParam<g:g>:Progress

  Termination Analysis
  File "TestCyberTruck.res", line 348, characters 14-140
  f returns NoProgress with trace [g:Progress || _ || Parser.next:Progress; f:Progress]

  Termination Analysis
  File "TestCyberTruck.res", line 436, characters 45-51
  kleene is parametric ~f=oneTwo

  Termination Analysis
  File "TestCyberTruck.res", line 397, characters 93-265
  Extend Function Table with concat as parametric ~f=one

  Termination Analysis
  File "TestCyberTruck.res", line 397, characters 93-265
  Extend Function Table with concat as parametric ~g=two

  Function Table
  1 concat<f, g>: switch f {some: switch g {some: Some, none: None}, none: None}
  2 kleene<f>: switch f {some: kleene<f:f>, none: _}
  3 one: [+Parser.next; Some || None]
  4 oneTwo: concat<f:one,g:two>
  5 oneTwoStar: kleene<f:oneTwo>
  6 two: [+Parser.next; Some || None]

  Termination Analysis for oneTwoStar

  Termination Analysis
  File "TestCyberTruck.res", line 436, characters 35-55
  Cache miss for kleene<f:oneTwo>

  Termination Analysis
  File "TestCyberTruck.res", line 412, characters 11-15
  Cache miss for oneTwo

  Termination Analysis
  File "TestCyberTruck.res", line 433, characters 46-71
  Cache miss for concat<f:one,g:two>

  Termination Analysis
  File "TestCyberTruck.res", line 402, characters 11-15
  Cache miss for one

  Termination Analysis
  File "TestCyberTruck.res", line 402, characters 11-15
  one returns {some: Progress, none: NoProgress} with trace [Parser.next:Progress; Some || None]

  Termination Analysis
  File "TestCyberTruck.res", line 405, characters 13-17
  Cache miss for two

  Termination Analysis
  File "TestCyberTruck.res", line 405, characters 13-17
  two returns {some: Progress, none: NoProgress} with trace [Parser.next:Progress; Some || None]

  Termination Analysis
  File "TestCyberTruck.res", line 433, characters 46-71
  concat<f:one,g:two> returns {some: Progress, none: NoProgress} with trace one:NoProgress; [two:NoProgress; [Some || None] || None]

  Termination Analysis
  File "TestCyberTruck.res", line 412, characters 11-15
  oneTwo returns {some: Progress, none: NoProgress} with trace concat<f:one,g:two>:NoProgress

  Termination Analysis
  File "TestCyberTruck.res", line 436, characters 35-55
  kleene<f:oneTwo> returns NoProgress with trace oneTwo:NoProgress; [kleene<f:oneTwo>:Progress || _]

  Termination Analysis
  File "TestCyberTruck.res", line 436, characters 30-55
  oneTwoStar returns NoProgress with trace kleene<f:oneTwo>:NoProgress

  Function Table
  1 testTry: [+progress; testTry || +progress; testTry]

  Termination Analysis for testTry

  Termination Analysis
  File "TestCyberTruck.res", line 440, characters 18-178
  testTry returns Progress with trace [progress:Progress; testTry:Progress || progress:Progress; testTry:Progress]

  Termination Analysis Stats
  Files:1
  Recursive Blocks:21
  Functions:49
  Infinite Loops:10
  Hygiene Errors:1
  Cache Hits:8/31
  
  
  Analysis reported 11 issues (Error Hygiene:1, Error Termination:10)
